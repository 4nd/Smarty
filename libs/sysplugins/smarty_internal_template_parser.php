<?php
/**
 * Smarty Internal Plugin Template_parser
 *
 * This is the template parser.
 * It is generated from the internal.template_parser.y file
 * @package Smarty
 * @subpackage Compiler
 * @author Uwe Tews
 */

class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string)$s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->_string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno; /* The state-number */
    public $major; /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
}

;


#line 12 "smarty_internal_template_parser.y"
class Smarty_Internal_Template_Parser extends Smarty_Internal_Magic_Error #line 79 "smarty_internal_template_parser.php"
{
#line 14 "smarty_internal_template_parser.y"

    const Err1 = "Security error: Call to private object member not allowed";
    const Err2 = "Security error: Call to dynamic object member not allowed";
    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";
    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    public $lex = null;
    public $compiler = null;
    public $prefix_number = 0;
    public $block_nesting_level = 0;
    private $internalError = false;
    private $last_taglineno = 0;
    private $last_taglineno_nocache = 0;
    private $strip = false;
    private $text_is_php = false;
    private $is_xml = false;
    private $db_quote_code_buffer = '';
    private $asp_tags = null;
    private $php_handling = null;
    private $security = null;
    private $last_variable = null;
    private $last_index = null;

    function __construct($lex, $compiler)
    {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->compiler->prefix_code = array();
        if ($this->security = isset($this->compiler->tpl_obj->security_policy)) {
            $this->php_handling = $this->compiler->tpl_obj->security_policy->php_handling;
        } else {
            $this->php_handling = $this->compiler->tpl_obj->php_handling;
        }
        $this->asp_tags = (ini_get('asp_tags') != '0');
    }


    public function compileVariable($variable)
    {
        if (strpos($variable, '(') === false) {
            // not a variable variable
            $var = trim($variable, '\'"');
            $this->compiler->tag_nocache = $this->compiler->tag_nocache | $this->compiler->tpl_obj->getVariable($var, null, true, false, 'nocache');
//			    $this->compiler->tpl_obj->properties['variables'][$var] = $this->compiler->tag_nocache|$this->compiler->nocache;
        } else {
            $var = '{' . $variable . '}';
        }
        return '$_scope->' . $var . '->value';
    }

    public function updateNocacheLineTrace($allways = false)
    {
        if ($this->compiler->tpl_obj->enable_traceback) {
            $line = $this->lex->taglineno;
            if ($this->compiler->caching && $this->last_taglineno_nocache != $this->lex->taglineno) {
                $this->compiler->has_code = true;
                $this->compiler->nocache_nolog = true;
                $this->compiler->nocacheCode('', true, $line);
                $this->last_taglineno_nocache = $this->lex->taglineno;
            } elseif ($allways && $this->last_taglineno != $this->lex->taglineno) {
                $this->compiler->has_code = true;
                $this->compiler->nocacheCode('', true, $line);
                $this->last_taglineno = $this->lex->taglineno;
            }
        }
    }

#line 147 "smarty_internal_template_parser.php"

    const TP_VERT = 1;
    const TP_COLON = 2;
    const TP_TEMPLATEINIT = 3;
    const TP_LDEL = 4;
    const TP_COMMENT = 5;
    const TP_RDEL = 6;
    const TP_PHPSTARTTAG = 7;
    const TP_PHPENDTAG = 8;
    const TP_ASPSTARTTAG = 9;
    const TP_ASPENDTAG = 10;
    const TP_FAKEPHPSTARTTAG = 11;
    const TP_XMLTAG = 12;
    const TP_TEXT = 13;
    const TP_STRIPON = 14;
    const TP_STRIPOFF = 15;
    const TP_LITERALSTART = 16;
    const TP_LITERALEND = 17;
    const TP_LITERAL = 18;
    const TP_DOLLAR = 19;
    const TP_ID = 20;
    const TP_EQUAL = 21;
    const TP_PTR = 22;
    const TP_LDELIF = 23;
    const TP_LDELFOR = 24;
    const TP_SEMICOLON = 25;
    const TP_IDINCDEC = 26;
    const TP_TO = 27;
    const TP_STEP = 28;
    const TP_LDELFOREACH = 29;
    const TP_SPACE = 30;
    const TP_AS = 31;
    const TP_APTR = 32;
    const TP_LDELSETFILTER = 33;
    const TP_LDELSLASH = 34;
    const TP_ATTR = 35;
    const TP_INTEGER = 36;
    const TP_COMMA = 37;
    const TP_OPENP = 38;
    const TP_CLOSEP = 39;
    const TP_MATH = 40;
    const TP_UNIMATH = 41;
    const TP_ANDSYM = 42;
    const TP_ISIN = 43;
    const TP_ISDIVBY = 44;
    const TP_ISNOTDIVBY = 45;
    const TP_ISEVEN = 46;
    const TP_ISNOTEVEN = 47;
    const TP_ISEVENBY = 48;
    const TP_ISNOTEVENBY = 49;
    const TP_ISODD = 50;
    const TP_ISNOTODD = 51;
    const TP_ISODDBY = 52;
    const TP_ISNOTODDBY = 53;
    const TP_INSTANCEOF = 54;
    const TP_NAMESPACE = 55;
    const TP_QMARK = 56;
    const TP_NOT = 57;
    const TP_TYPECAST = 58;
    const TP_HEX = 59;
    const TP_DOT = 60;
    const TP_SINGLEQUOTESTRING = 61;
    const TP_DOUBLECOLON = 62;
    const TP_AT = 63;
    const TP_HATCH = 64;
    const TP_OPENB = 65;
    const TP_CLOSEB = 66;
    const TP_EQUALS = 67;
    const TP_NOTEQUALS = 68;
    const TP_GREATERTHAN = 69;
    const TP_LESSTHAN = 70;
    const TP_GREATEREQUAL = 71;
    const TP_LESSEQUAL = 72;
    const TP_IDENTITY = 73;
    const TP_NONEIDENTITY = 74;
    const TP_MOD = 75;
    const TP_LAND = 76;
    const TP_LOR = 77;
    const TP_LXOR = 78;
    const TP_QUOTE = 79;
    const TP_BACKTICK = 80;
    const TP_DOLLARID = 81;
    const YY_NO_ACTION = 610;
    const YY_ACCEPT_ACTION = 609;
    const YY_ERROR_ACTION = 608;

    const YY_SZ_ACTTAB = 2599;
    static public $yy_action = array(
        /*     0 */
        222, 27, 304, 222, 4, 244, 118, 4, 346, 90,
        /*    10 */
        127, 609, 97, 264, 338, 288, 100, 306, 398, 34,
        /*    20 */
        183, 313, 325, 327, 26, 399, 245, 20, 148, 44,
        /*    30 */
        316, 148, 368, 286, 45, 219, 371, 25, 183, 53,
        /*    40 */
        54, 50, 47, 15, 12, 352, 353, 14, 13, 384,
        /*    50 */
        385, 19, 39, 222, 222, 200, 222, 44, 392, 470,
        /*    60 */
        137, 470, 45, 30, 29, 293, 386, 387, 383, 382,
        /*    70 */
        378, 379, 380, 381, 388, 389, 396, 397, 137, 126,
        /*    80 */
        190, 208, 44, 470, 236, 470, 222, 45, 470, 329,
        /*    90 */
        470, 344, 53, 54, 50, 47, 15, 12, 352, 353,
        /*   100 */
        14, 13, 384, 385, 19, 39, 222, 49, 222, 49,
        /*   110 */
        222, 331, 222, 467, 285, 335, 30, 343, 370, 386,
        /*   120 */
        387, 383, 382, 378, 379, 380, 381, 388, 389, 396,
        /*   130 */
        397, 222, 256, 254, 222, 44, 464, 467, 44, 44,
        /*   140 */
        45, 6, 467, 45, 45, 53, 54, 50, 47, 15,
        /*   150 */
        12, 352, 353, 14, 13, 384, 385, 19, 39, 222,
        /*   160 */
        44, 49, 377, 49, 390, 45, 222, 109, 362, 193,
        /*   170 */
        374, 391, 386, 387, 383, 382, 378, 379, 380, 381,
        /*   180 */
        388, 389, 396, 397, 222, 46, 44, 49, 44, 347,
        /*   190 */
        295, 45, 44, 45, 342, 208, 342, 45, 53, 54,
        /*   200 */
        50, 47, 15, 12, 352, 353, 14, 13, 384, 385,
        /*   210 */
        19, 39, 222, 273, 267, 271, 269, 291, 393, 49,
        /*   220 */
        341, 363, 207, 282, 277, 386, 387, 383, 382, 378,
        /*   230 */
        379, 380, 381, 388, 389, 396, 397, 336, 338, 288,
        /*   240 */
        46, 44, 44, 222, 44, 44, 45, 45, 312, 45,
        /*   250 */
        45, 53, 54, 50, 47, 15, 12, 352, 353, 14,
        /*   260 */
        13, 384, 385, 19, 39, 222, 103, 179, 108, 173,
        /*   270 */
        270, 302, 361, 349, 394, 340, 180, 340, 386, 387,
        /*   280 */
        383, 382, 378, 379, 380, 381, 388, 389, 396, 397,
        /*   290 */
        316, 30, 208, 265, 208, 44, 44, 44, 44, 8,
        /*   300 */
        45, 45, 45, 45, 53, 54, 50, 47, 15, 12,
        /*   310 */
        352, 353, 14, 13, 384, 385, 19, 39, 222, 105,
        /*   320 */
        174, 192, 284, 144, 283, 395, 333, 18, 340, 204,
        /*   330 */
        320, 386, 387, 383, 382, 378, 379, 380, 381, 388,
        /*   340 */
        389, 396, 397, 351, 42, 208, 44, 208, 44, 44,
        /*   350 */
        44, 45, 275, 45, 45, 45, 232, 53, 54, 50,
        /*   360 */
        47, 15, 12, 352, 353, 14, 13, 384, 385, 19,
        /*   370 */
        39, 222, 332, 348, 170, 222, 44, 5, 30, 376,
        /*   380 */
        268, 45, 340, 196, 386, 387, 383, 382, 378, 379,
        /*   390 */
        380, 381, 388, 389, 396, 397, 44, 44, 365, 212,
        /*   400 */
        215, 45, 45, 44, 44, 9, 130, 250, 45, 45,
        /*   410 */
        53, 54, 50, 47, 15, 12, 352, 353, 14, 13,
        /*   420 */
        384, 385, 19, 39, 222, 28, 205, 178, 161, 321,
        /*   430 */
        334, 279, 289, 111, 373, 340, 340, 386, 387, 383,
        /*   440 */
        382, 378, 379, 380, 381, 388, 389, 396, 397, 106,
        /*   450 */
        356, 107, 212, 212, 44, 44, 44, 4, 222, 45,
        /*   460 */
        45, 45, 194, 53, 54, 50, 47, 15, 12, 352,
        /*   470 */
        353, 14, 13, 384, 385, 19, 39, 222, 22, 222,
        /*   480 */
        169, 148, 211, 308, 328, 201, 320, 18, 340, 37,
        /*   490 */
        386, 387, 383, 382, 378, 379, 380, 381, 388, 389,
        /*   500 */
        396, 397, 31, 351, 33, 212, 239, 253, 226, 534,
        /*   510 */
        197, 49, 2, 184, 534, 350, 53, 54, 50, 47,
        /*   520 */
        15, 12, 352, 353, 14, 13, 384, 385, 19, 39,
        /*   530 */
        222, 136, 242, 246, 182, 290, 189, 369, 133, 132,
        /*   540 */
        112, 248, 340, 386, 387, 383, 382, 378, 379, 380,
        /*   550 */
        381, 388, 389, 396, 397, 203, 319, 185, 138, 350,
        /*   560 */
        239, 251, 208, 158, 198, 320, 40, 131, 18, 53,
        /*   570 */
        54, 50, 47, 15, 12, 352, 353, 14, 13, 384,
        /*   580 */
        385, 19, 39, 222, 351, 239, 281, 44, 35, 276,
        /*   590 */
        146, 274, 45, 45, 116, 117, 386, 387, 383, 382,
        /*   600 */
        378, 379, 380, 381, 388, 389, 396, 397, 316, 316,
        /*   610 */
        164, 278, 322, 238, 310, 287, 188, 187, 340, 158,
        /*   620 */
        339, 158, 53, 54, 50, 47, 15, 12, 352, 353,
        /*   630 */
        14, 13, 384, 385, 19, 39, 222, 365, 167, 345,
        /*   640 */
        96, 248, 309, 128, 315, 120, 340, 99, 104, 386,
        /*   650 */
        387, 383, 382, 378, 379, 380, 381, 388, 389, 396,
        /*   660 */
        397, 316, 316, 311, 38, 129, 147, 359, 307, 145,
        /*   670 */
        34, 235, 357, 355, 2, 53, 54, 50, 47, 15,
        /*   680 */
        12, 352, 353, 14, 13, 384, 385, 19, 39, 305,
        /*   690 */
        222, 209, 244, 206, 36, 222, 330, 308, 366, 350,
        /*   700 */
        183, 367, 386, 387, 383, 382, 378, 379, 380, 381,
        /*   710 */
        388, 389, 396, 397, 199, 186, 212, 280, 41, 191,
        /*   720 */
        223, 195, 332, 332, 332, 332, 332, 332, 332, 53,
        /*   730 */
        54, 50, 47, 15, 12, 352, 353, 14, 13, 384,
        /*   740 */
        385, 19, 39, 222, 332, 332, 332, 332, 332, 332,
        /*   750 */
        332, 332, 332, 332, 125, 124, 386, 387, 383, 382,
        /*   760 */
        378, 379, 380, 381, 388, 389, 396, 397, 316, 316,
        /*   770 */
        332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
        /*   780 */
        332, 272, 53, 54, 50, 47, 15, 12, 352, 353,
        /*   790 */
        14, 13, 384, 385, 19, 39, 222, 332, 332, 332,
        /*   800 */
        332, 210, 332, 332, 332, 332, 18, 102, 332, 386,
        /*   810 */
        387, 383, 382, 378, 379, 380, 381, 388, 389, 396,
        /*   820 */
        397, 316, 243, 332, 332, 332, 332, 332, 332, 332,
        /*   830 */
        332, 332, 332, 332, 183, 53, 54, 50, 47, 15,
        /*   840 */
        12, 352, 353, 14, 13, 384, 385, 19, 39, 222,
        /*   850 */
        332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
        /*   860 */
        332, 181, 386, 387, 383, 382, 378, 379, 380, 381,
        /*   870 */
        388, 389, 396, 397, 137, 316, 332, 332, 332, 332,
        /*   880 */
        332, 332, 332, 332, 332, 332, 332, 332, 53, 54,
        /*   890 */
        50, 47, 15, 12, 352, 353, 14, 13, 384, 385,
        /*   900 */
        19, 39, 332, 332, 332, 332, 332, 332, 332, 332,
        /*   910 */
        332, 332, 183, 332, 332, 386, 387, 383, 382, 378,
        /*   920 */
        379, 380, 381, 388, 389, 396, 397, 18, 332, 53,
        /*   930 */
        54, 50, 47, 15, 12, 352, 353, 14, 13, 384,
        /*   940 */
        385, 19, 39, 351, 33, 332, 332, 332, 332, 332,
        /*   950 */
        215, 332, 332, 332, 332, 9, 386, 387, 383, 382,
        /*   960 */
        378, 379, 380, 381, 388, 389, 396, 397, 43, 255,
        /*   970 */
        332, 332, 332, 18, 332, 332, 332, 332, 332, 332,
        /*   980 */
        332, 332, 202, 135, 94, 332, 261, 3, 110, 351,
        /*   990 */
        323, 18, 332, 142, 21, 11, 332, 241, 258, 44,
        /*  1000 */
        259, 257, 23, 332, 45, 51, 332, 351, 208, 332,
        /*  1010 */
        177, 332, 304, 332, 332, 332, 152, 332, 340, 229,
        /*  1020 */
        127, 52, 48, 314, 247, 326, 43, 332, 107, 1,
        /*  1030 */
        350, 313, 325, 327, 332, 399, 18, 332, 18, 332,
        /*  1040 */
        332, 140, 216, 98, 332, 3, 110, 332, 323, 304,
        /*  1050 */
        263, 142, 351, 159, 351, 241, 258, 127, 259, 332,
        /*  1060 */
        23, 332, 44, 51, 233, 292, 332, 45, 313, 325,
        /*  1070 */
        327, 332, 399, 18, 332, 17, 332, 229, 18, 52,
        /*  1080 */
        48, 314, 247, 326, 43, 332, 107, 1, 400, 262,
        /*  1090 */
        143, 317, 332, 468, 225, 332, 18, 261, 332, 134,
        /*  1100 */
        227, 98, 332, 3, 110, 332, 323, 324, 252, 142,
        /*  1110 */
        332, 304, 237, 241, 258, 156, 259, 468, 23, 127,
        /*  1120 */
        18, 51, 468, 332, 332, 4, 332, 318, 332, 332,
        /*  1130 */
        313, 325, 327, 332, 399, 229, 351, 52, 48, 314,
        /*  1140 */
        247, 326, 43, 332, 107, 1, 44, 332, 175, 148,
        /*  1150 */
        332, 45, 332, 332, 332, 172, 340, 140, 227, 98,
        /*  1160 */
        332, 3, 110, 340, 323, 332, 332, 142, 350, 304,
        /*  1170 */
        149, 241, 258, 150, 259, 350, 23, 127, 332, 51,
        /*  1180 */
        332, 249, 332, 332, 332, 399, 171, 332, 313, 325,
        /*  1190 */
        327, 332, 399, 229, 340, 52, 48, 314, 247, 326,
        /*  1200 */
        43, 332, 107, 1, 332, 332, 350, 332, 332, 332,
        /*  1210 */
        332, 332, 332, 332, 332, 140, 214, 98, 332, 3,
        /*  1220 */
        110, 332, 323, 332, 332, 142, 332, 304, 332, 241,
        /*  1230 */
        258, 155, 228, 332, 23, 127, 332, 51, 332, 332,
        /*  1240 */
        332, 332, 332, 332, 332, 332, 313, 325, 327, 332,
        /*  1250 */
        399, 229, 332, 52, 48, 314, 247, 326, 43, 332,
        /*  1260 */
        107, 1, 332, 332, 332, 332, 332, 332, 332, 332,
        /*  1270 */
        332, 332, 332, 135, 94, 98, 332, 3, 110, 332,
        /*  1280 */
        323, 332, 332, 142, 332, 304, 332, 241, 258, 151,
        /*  1290 */
        259, 332, 23, 127, 332, 51, 332, 332, 332, 332,
        /*  1300 */
        332, 332, 332, 332, 313, 325, 327, 332, 399, 229,
        /*  1310 */
        332, 52, 48, 314, 247, 326, 43, 332, 107, 1,
        /*  1320 */
        332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
        /*  1330 */
        332, 140, 213, 98, 332, 3, 110, 332, 323, 332,
        /*  1340 */
        332, 142, 332, 304, 332, 241, 258, 157, 259, 332,
        /*  1350 */
        23, 127, 332, 51, 332, 332, 332, 332, 332, 332,
        /*  1360 */
        332, 332, 313, 325, 327, 332, 399, 229, 332, 52,
        /*  1370 */
        48, 314, 247, 326, 43, 332, 107, 1, 332, 332,
        /*  1380 */
        332, 332, 332, 332, 332, 332, 332, 332, 332, 130,
        /*  1390 */
        227, 98, 332, 3, 110, 332, 323, 332, 332, 142,
        /*  1400 */
        332, 304, 332, 241, 258, 153, 259, 332, 16, 127,
        /*  1410 */
        332, 51, 332, 332, 332, 332, 332, 332, 332, 332,
        /*  1420 */
        313, 325, 327, 332, 399, 229, 332, 52, 48, 314,
        /*  1430 */
        247, 326, 43, 332, 107, 1, 332, 332, 332, 332,
        /*  1440 */
        332, 332, 332, 332, 332, 332, 332, 139, 227, 98,
        /*  1450 */
        332, 3, 110, 332, 323, 332, 332, 142, 332, 304,
        /*  1460 */
        332, 241, 258, 154, 259, 332, 7, 127, 332, 51,
        /*  1470 */
        332, 332, 332, 332, 332, 332, 332, 332, 313, 325,
        /*  1480 */
        327, 332, 399, 229, 332, 52, 48, 314, 247, 326,
        /*  1490 */
        43, 332, 107, 1, 332, 332, 332, 332, 332, 332,
        /*  1500 */
        332, 332, 332, 332, 332, 140, 217, 98, 332, 3,
        /*  1510 */
        110, 332, 323, 332, 332, 142, 101, 166, 332, 241,
        /*  1520 */
        258, 332, 259, 332, 23, 340, 332, 51, 21, 11,
        /*  1530 */
        332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
        /*  1540 */
        332, 229, 208, 52, 48, 314, 247, 326, 43, 332,
        /*  1550 */
        107, 1, 332, 332, 332, 332, 332, 332, 332, 332,
        /*  1560 */
        332, 332, 332, 130, 227, 98, 332, 3, 110, 332,
        /*  1570 */
        323, 332, 332, 142, 202, 163, 332, 241, 258, 332,
        /*  1580 */
        259, 332, 16, 340, 332, 51, 21, 11, 332, 332,
        /*  1590 */
        332, 332, 332, 332, 332, 332, 332, 332, 332, 229,
        /*  1600 */
        208, 52, 48, 314, 247, 326, 43, 332, 107, 332,
        /*  1610 */
        332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
        /*  1620 */
        332, 130, 231, 98, 332, 3, 110, 332, 323, 332,
        /*  1630 */
        332, 142, 332, 332, 332, 241, 258, 332, 259, 332,
        /*  1640 */
        16, 332, 332, 51, 332, 332, 332, 332, 332, 332,
        /*  1650 */
        332, 332, 332, 332, 332, 332, 332, 224, 332, 52,
        /*  1660 */
        48, 314, 247, 326, 337, 10, 107, 332, 299, 298,
        /*  1670 */
        300, 301, 297, 296, 294, 303, 266, 207, 513, 202,
        /*  1680 */
        168, 98, 332, 332, 3, 110, 332, 332, 340, 332,
        /*  1690 */
        142, 21, 11, 332, 241, 258, 332, 513, 332, 513,
        /*  1700 */
        513, 332, 513, 513, 332, 208, 332, 513, 304, 513,
        /*  1710 */
        4, 513, 141, 332, 222, 56, 122, 123, 332, 360,
        /*  1720 */
        332, 332, 332, 306, 398, 332, 513, 313, 325, 327,
        /*  1730 */
        332, 399, 202, 165, 148, 260, 332, 332, 513, 332,
        /*  1740 */
        332, 340, 332, 44, 21, 11, 304, 332, 45, 332,
        /*  1750 */
        141, 4, 513, 76, 127, 332, 332, 332, 208, 332,
        /*  1760 */
        332, 306, 398, 332, 304, 313, 325, 327, 118, 399,
        /*  1770 */
        332, 90, 127, 332, 332, 148, 220, 332, 332, 306,
        /*  1780 */
        398, 332, 332, 313, 325, 327, 304, 399, 332, 332,
        /*  1790 */
        141, 332, 332, 70, 122, 251, 304, 332, 375, 332,
        /*  1800 */
        141, 306, 398, 76, 127, 313, 325, 327, 332, 399,
        /*  1810 */
        332, 306, 398, 332, 304, 313, 325, 327, 141, 399,
        /*  1820 */
        332, 76, 127, 332, 332, 332, 230, 332, 332, 306,
        /*  1830 */
        398, 332, 332, 313, 325, 327, 332, 399, 332, 304,
        /*  1840 */
        202, 162, 332, 141, 218, 332, 76, 127, 332, 340,
        /*  1850 */
        332, 332, 21, 11, 306, 398, 332, 332, 313, 325,
        /*  1860 */
        327, 332, 399, 304, 332, 332, 208, 141, 332, 221,
        /*  1870 */
        65, 127, 332, 304, 332, 332, 332, 141, 306, 398,
        /*  1880 */
        68, 127, 313, 325, 327, 332, 399, 332, 306, 398,
        /*  1890 */
        332, 32, 313, 325, 327, 332, 399, 332, 332, 332,
        /*  1900 */
        372, 332, 332, 332, 332, 332, 202, 176, 332, 332,
        /*  1910 */
        3, 110, 332, 332, 332, 340, 142, 332, 21, 11,
        /*  1920 */
        241, 258, 304, 332, 332, 332, 95, 32, 332, 59,
        /*  1930 */
        121, 332, 208, 332, 332, 332, 372, 306, 398, 332,
        /*  1940 */
        332, 313, 325, 327, 332, 399, 3, 110, 332, 332,
        /*  1950 */
        332, 332, 142, 332, 304, 332, 241, 258, 141, 332,
        /*  1960 */
        332, 63, 127, 332, 332, 332, 354, 24, 364, 306,
        /*  1970 */
        398, 332, 332, 313, 325, 327, 304, 399, 332, 332,
        /*  1980 */
        141, 332, 332, 66, 127, 332, 332, 332, 332, 332,
        /*  1990 */
        332, 306, 398, 332, 332, 313, 325, 327, 332, 399,
        /*  2000 */
        332, 332, 358, 24, 364, 332, 332, 304, 332, 332,
        /*  2010 */
        332, 141, 332, 332, 80, 127, 332, 304, 332, 332,
        /*  2020 */
        332, 141, 306, 398, 89, 127, 313, 325, 327, 332,
        /*  2030 */
        399, 332, 306, 398, 332, 332, 313, 325, 327, 304,
        /*  2040 */
        399, 332, 332, 141, 332, 332, 83, 127, 332, 304,
        /*  2050 */
        332, 332, 332, 141, 306, 398, 81, 127, 313, 325,
        /*  2060 */
        327, 332, 399, 332, 306, 398, 332, 304, 313, 325,
        /*  2070 */
        327, 141, 399, 332, 74, 127, 332, 332, 332, 332,
        /*  2080 */
        332, 332, 306, 398, 332, 332, 313, 325, 327, 304,
        /*  2090 */
        399, 332, 332, 141, 332, 332, 69, 127, 332, 332,
        /*  2100 */
        332, 332, 332, 332, 306, 398, 332, 332, 313, 325,
        /*  2110 */
        327, 304, 399, 332, 332, 141, 332, 332, 70, 127,
        /*  2120 */
        332, 332, 332, 332, 332, 332, 306, 398, 332, 332,
        /*  2130 */
        313, 325, 327, 304, 399, 332, 332, 141, 332, 332,
        /*  2140 */
        58, 127, 332, 304, 332, 332, 332, 141, 306, 398,
        /*  2150 */
        78, 127, 313, 325, 327, 332, 399, 332, 306, 398,
        /*  2160 */
        332, 304, 313, 325, 327, 141, 399, 332, 71, 127,
        /*  2170 */
        332, 332, 332, 332, 332, 332, 306, 398, 332, 332,
        /*  2180 */
        240, 325, 327, 304, 399, 332, 332, 141, 332, 332,
        /*  2190 */
        64, 127, 332, 332, 332, 332, 332, 332, 306, 398,
        /*  2200 */
        332, 332, 313, 325, 327, 304, 399, 332, 332, 141,
        /*  2210 */
        332, 332, 93, 127, 332, 332, 332, 332, 332, 332,
        /*  2220 */
        306, 398, 332, 332, 313, 325, 327, 304, 399, 332,
        /*  2230 */
        332, 115, 332, 332, 84, 127, 332, 304, 332, 332,
        /*  2240 */
        332, 141, 306, 398, 67, 127, 313, 325, 327, 332,
        /*  2250 */
        399, 332, 306, 398, 332, 304, 313, 325, 327, 141,
        /*  2260 */
        399, 332, 62, 127, 332, 332, 332, 332, 332, 332,
        /*  2270 */
        306, 398, 332, 332, 313, 325, 327, 304, 399, 332,
        /*  2280 */
        332, 141, 332, 332, 92, 127, 332, 332, 332, 332,
        /*  2290 */
        332, 332, 306, 398, 332, 332, 313, 325, 327, 304,
        /*  2300 */
        399, 332, 332, 141, 332, 332, 86, 127, 332, 332,
        /*  2310 */
        332, 332, 332, 332, 306, 398, 332, 332, 313, 325,
        /*  2320 */
        327, 304, 399, 332, 332, 119, 332, 332, 57, 127,
        /*  2330 */
        332, 304, 332, 332, 332, 141, 306, 398, 87, 127,
        /*  2340 */
        313, 325, 327, 332, 399, 332, 306, 398, 332, 304,
        /*  2350 */
        313, 325, 327, 141, 399, 332, 88, 127, 332, 332,
        /*  2360 */
        332, 332, 332, 332, 306, 398, 332, 332, 313, 325,
        /*  2370 */
        327, 304, 399, 332, 332, 141, 332, 332, 75, 127,
        /*  2380 */
        332, 332, 332, 332, 332, 332, 306, 398, 332, 332,
        /*  2390 */
        313, 325, 327, 304, 399, 332, 332, 113, 332, 332,
        /*  2400 */
        73, 127, 332, 332, 332, 332, 332, 332, 306, 398,
        /*  2410 */
        332, 332, 313, 325, 327, 304, 399, 332, 332, 95,
        /*  2420 */
        332, 332, 55, 121, 332, 304, 332, 332, 332, 141,
        /*  2430 */
        306, 398, 61, 127, 234, 325, 327, 332, 399, 332,
        /*  2440 */
        306, 398, 332, 304, 313, 325, 327, 141, 399, 332,
        /*  2450 */
        77, 127, 332, 332, 332, 332, 332, 332, 306, 398,
        /*  2460 */
        332, 332, 313, 325, 327, 304, 399, 332, 332, 141,
        /*  2470 */
        332, 332, 72, 127, 332, 332, 332, 332, 332, 332,
        /*  2480 */
        306, 398, 332, 332, 313, 325, 327, 304, 399, 332,
        /*  2490 */
        332, 114, 332, 332, 82, 127, 332, 332, 332, 332,
        /*  2500 */
        332, 332, 306, 398, 332, 332, 313, 325, 327, 304,
        /*  2510 */
        399, 332, 332, 141, 332, 332, 85, 127, 332, 304,
        /*  2520 */
        332, 332, 332, 141, 306, 398, 79, 127, 313, 325,
        /*  2530 */
        327, 332, 399, 332, 306, 398, 332, 304, 313, 325,
        /*  2540 */
        327, 141, 399, 332, 60, 127, 332, 332, 332, 332,
        /*  2550 */
        332, 332, 306, 398, 332, 332, 313, 325, 327, 304,
        /*  2560 */
        399, 332, 332, 141, 332, 332, 91, 127, 332, 332,
        /*  2570 */
        332, 332, 202, 160, 306, 398, 332, 332, 313, 325,
        /*  2580 */
        327, 340, 399, 332, 21, 11, 332, 332, 332, 332,
        /*  2590 */
        332, 332, 332, 332, 332, 332, 332, 332, 208,
    );
    static public $yy_lookahead = array(
        /*     0 */
        1, 32, 86, 1, 38, 2, 90, 38, 6, 93,
        /*    10 */
        94, 83, 84, 85, 86, 87, 98, 101, 102, 21,
        /*    20 */
        22, 105, 106, 107, 21, 109, 60, 28, 62, 30,
        /*    30 */
        112, 62, 66, 6, 35, 119, 120, 21, 22, 40,
        /*    40 */
        41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
        /*    50 */
        51, 52, 53, 1, 1, 91, 1, 30, 6, 6,
        /*    60 */
        62, 6, 35, 37, 4, 39, 67, 68, 69, 70,
        /*    70 */
        71, 72, 73, 74, 75, 76, 77, 78, 62, 19,
        /*    80 */
        20, 117, 30, 30, 31, 30, 1, 35, 35, 20,
        /*    90 */
        35, 6, 40, 41, 42, 43, 44, 45, 46, 47,
        /*   100 */
        48, 49, 50, 51, 52, 53, 1, 54, 1, 54,
        /*   110 */
        1, 6, 1, 6, 6, 6, 37, 6, 39, 67,
        /*   120 */
        68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
        /*   130 */
        78, 1, 63, 22, 1, 30, 6, 30, 30, 30,
        /*   140 */
        35, 37, 35, 35, 35, 40, 41, 42, 43, 44,
        /*   150 */
        45, 46, 47, 48, 49, 50, 51, 52, 53, 1,
        /*   160 */
        30, 54, 6, 54, 6, 35, 1, 110, 6, 91,
        /*   170 */
        66, 6, 67, 68, 69, 70, 71, 72, 73, 74,
        /*   180 */
        75, 76, 77, 78, 1, 2, 30, 54, 30, 6,
        /*   190 */
        17, 35, 30, 35, 118, 117, 118, 35, 40, 41,
        /*   200 */
        42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
        /*   210 */
        52, 53, 1, 7, 8, 9, 10, 11, 6, 54,
        /*   220 */
        6, 6, 16, 17, 18, 67, 68, 69, 70, 71,
        /*   230 */
        72, 73, 74, 75, 76, 77, 78, 85, 86, 87,
        /*   240 */
        2, 30, 30, 1, 30, 30, 35, 35, 6, 35,
        /*   250 */
        35, 40, 41, 42, 43, 44, 45, 46, 47, 48,
        /*   260 */
        49, 50, 51, 52, 53, 1, 91, 92, 91, 92,
        /*   270 */
        6, 6, 6, 6, 6, 100, 98, 100, 67, 68,
        /*   280 */
        69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
        /*   290 */
        112, 37, 117, 39, 117, 30, 30, 30, 30, 38,
        /*   300 */
        35, 35, 35, 35, 40, 41, 42, 43, 44, 45,
        /*   310 */
        46, 47, 48, 49, 50, 51, 52, 53, 1, 91,
        /*   320 */
        92, 91, 6, 62, 6, 6, 6, 4, 100, 113,
        /*   330 */
        114, 67, 68, 69, 70, 71, 72, 73, 74, 75,
        /*   340 */
        76, 77, 78, 20, 21, 117, 30, 117, 30, 30,
        /*   350 */
        30, 35, 6, 35, 35, 35, 39, 40, 41, 42,
        /*   360 */
        43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
        /*   370 */
        53, 1, 6, 6, 92, 1, 30, 38, 37, 6,
        /*   380 */
        39, 35, 100, 110, 67, 68, 69, 70, 71, 72,
        /*   390 */
        73, 74, 75, 76, 77, 78, 30, 30, 86, 117,
        /*   400 */
        60, 35, 35, 30, 30, 65, 19, 20, 35, 35,
        /*   410 */
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
        /*   420 */
        50, 51, 52, 53, 1, 2, 99, 92, 92, 114,
        /*   430 */
        6, 6, 6, 121, 122, 100, 100, 67, 68, 69,
        /*   440 */
        70, 71, 72, 73, 74, 75, 76, 77, 78, 99,
        /*   450 */
        80, 64, 117, 117, 30, 30, 30, 38, 1, 35,
        /*   460 */
        35, 35, 110, 40, 41, 42, 43, 44, 45, 46,
        /*   470 */
        47, 48, 49, 50, 51, 52, 53, 1, 4, 1,
        /*   480 */
        92, 62, 6, 111, 6, 113, 114, 4, 100, 32,
        /*   490 */
        67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
        /*   500 */
        77, 78, 21, 20, 21, 117, 94, 95, 96, 60,
        /*   510 */
        99, 54, 38, 110, 65, 112, 40, 41, 42, 43,
        /*   520 */
        44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        /*   530 */
        1, 19, 19, 20, 92, 6, 91, 66, 26, 19,
        /*   540 */
        88, 60, 100, 67, 68, 69, 70, 71, 72, 73,
        /*   550 */
        74, 75, 76, 77, 78, 25, 108, 110, 38, 112,
        /*   560 */
        94, 95, 117, 115, 113, 114, 27, 37, 4, 40,
        /*   570 */
        41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
        /*   580 */
        51, 52, 53, 1, 20, 94, 95, 30, 30, 87,
        /*   590 */
        20, 89, 35, 35, 98, 98, 67, 68, 69, 70,
        /*   600 */
        71, 72, 73, 74, 75, 76, 77, 78, 112, 112,
        /*   610 */
        92, 20, 108, 31, 108, 39, 64, 64, 100, 115,
        /*   620 */
        6, 115, 40, 41, 42, 43, 44, 45, 46, 47,
        /*   630 */
        48, 49, 50, 51, 52, 53, 1, 86, 92, 20,
        /*   640 */
        20, 60, 20, 19, 36, 20, 100, 98, 98, 67,
        /*   650 */
        68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
        /*   660 */
        78, 112, 112, 36, 2, 19, 19, 6, 20, 19,
        /*   670 */
        21, 20, 80, 122, 38, 40, 41, 42, 43, 44,
        /*   680 */
        45, 46, 47, 48, 49, 50, 51, 52, 53, 20,
        /*   690 */
        1, 20, 2, 20, 56, 1, 100, 111, 115, 112,
        /*   700 */
        22, 66, 67, 68, 69, 70, 71, 72, 73, 74,
        /*   710 */
        75, 76, 77, 78, 25, 110, 117, 30, 97, 110,
        /*   720 */
        97, 110, 123, 123, 123, 123, 123, 123, 123, 40,
        /*   730 */
        41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
        /*   740 */
        51, 52, 53, 1, 123, 123, 123, 123, 123, 123,
        /*   750 */
        123, 123, 123, 123, 98, 98, 67, 68, 69, 70,
        /*   760 */
        71, 72, 73, 74, 75, 76, 77, 78, 112, 112,
        /*   770 */
        123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
        /*   780 */
        123, 39, 40, 41, 42, 43, 44, 45, 46, 47,
        /*   790 */
        48, 49, 50, 51, 52, 53, 1, 123, 123, 123,
        /*   800 */
        123, 6, 123, 123, 123, 123, 4, 98, 123, 67,
        /*   810 */
        68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
        /*   820 */
        78, 112, 20, 123, 123, 123, 123, 123, 123, 123,
        /*   830 */
        123, 123, 123, 123, 22, 40, 41, 42, 43, 44,
        /*   840 */
        45, 46, 47, 48, 49, 50, 51, 52, 53, 1,
        /*   850 */
        123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
        /*   860 */
        123, 98, 67, 68, 69, 70, 71, 72, 73, 74,
        /*   870 */
        75, 76, 77, 78, 62, 112, 123, 123, 123, 123,
        /*   880 */
        123, 123, 123, 123, 123, 123, 123, 123, 40, 41,
        /*   890 */
        42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
        /*   900 */
        52, 53, 123, 123, 123, 123, 123, 123, 123, 123,
        /*   910 */
        123, 123, 22, 123, 123, 67, 68, 69, 70, 71,
        /*   920 */
        72, 73, 74, 75, 76, 77, 78, 4, 123, 40,
        /*   930 */
        41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
        /*   940 */
        51, 52, 53, 20, 21, 123, 123, 123, 123, 123,
        /*   950 */
        60, 123, 123, 123, 123, 65, 67, 68, 69, 70,
        /*   960 */
        71, 72, 73, 74, 75, 76, 77, 78, 4, 5,
        /*   970 */
        123, 123, 123, 4, 123, 123, 123, 123, 123, 123,
        /*   980 */
        123, 123, 91, 19, 20, 123, 63, 23, 24, 20,
        /*   990 */
        26, 4, 123, 29, 103, 104, 123, 33, 34, 30,
        /*  1000 */
        36, 32, 38, 123, 35, 41, 123, 20, 117, 123,
        /*  1010 */
        92, 123, 86, 123, 123, 123, 90, 123, 100, 55,
        /*  1020 */
        94, 57, 58, 59, 60, 61, 4, 123, 64, 65,
        /*  1030 */
        112, 105, 106, 107, 123, 109, 4, 123, 4, 123,
        /*  1040 */
        123, 19, 20, 79, 123, 23, 24, 123, 26, 86,
        /*  1050 */
        63, 29, 20, 90, 20, 33, 34, 94, 36, 123,
        /*  1060 */
        38, 123, 30, 41, 32, 102, 123, 35, 105, 106,
        /*  1070 */
        107, 123, 109, 4, 123, 4, 123, 55, 4, 57,
        /*  1080 */
        58, 59, 60, 61, 4, 123, 64, 65, 66, 20,
        /*  1090 */
        19, 20, 123, 6, 20, 123, 4, 63, 123, 19,
        /*  1100 */
        20, 79, 123, 23, 24, 123, 26, 36, 21, 29,
        /*  1110 */
        123, 86, 20, 33, 34, 90, 36, 30, 38, 94,
        /*  1120 */
        4, 41, 35, 123, 123, 38, 123, 102, 123, 123,
        /*  1130 */
        105, 106, 107, 123, 109, 55, 20, 57, 58, 59,
        /*  1140 */
        60, 61, 4, 123, 64, 65, 30, 123, 92, 62,
        /*  1150 */
        123, 35, 123, 123, 123, 92, 100, 19, 20, 79,
        /*  1160 */
        123, 23, 24, 100, 26, 123, 123, 29, 112, 86,
        /*  1170 */
        94, 33, 34, 90, 36, 112, 38, 94, 123, 41,
        /*  1180 */
        123, 105, 123, 123, 123, 109, 92, 123, 105, 106,
        /*  1190 */
        107, 123, 109, 55, 100, 57, 58, 59, 60, 61,
        /*  1200 */
        4, 123, 64, 65, 123, 123, 112, 123, 123, 123,
        /*  1210 */
        123, 123, 123, 123, 123, 19, 20, 79, 123, 23,
        /*  1220 */
        24, 123, 26, 123, 123, 29, 123, 86, 123, 33,
        /*  1230 */
        34, 90, 36, 123, 38, 94, 123, 41, 123, 123,
        /*  1240 */
        123, 123, 123, 123, 123, 123, 105, 106, 107, 123,
        /*  1250 */
        109, 55, 123, 57, 58, 59, 60, 61, 4, 123,
        /*  1260 */
        64, 65, 123, 123, 123, 123, 123, 123, 123, 123,
        /*  1270 */
        123, 123, 123, 19, 20, 79, 123, 23, 24, 123,
        /*  1280 */
        26, 123, 123, 29, 123, 86, 123, 33, 34, 90,
        /*  1290 */
        36, 123, 38, 94, 123, 41, 123, 123, 123, 123,
        /*  1300 */
        123, 123, 123, 123, 105, 106, 107, 123, 109, 55,
        /*  1310 */
        123, 57, 58, 59, 60, 61, 4, 123, 64, 65,
        /*  1320 */
        123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
        /*  1330 */
        123, 19, 20, 79, 123, 23, 24, 123, 26, 123,
        /*  1340 */
        123, 29, 123, 86, 123, 33, 34, 90, 36, 123,
        /*  1350 */
        38, 94, 123, 41, 123, 123, 123, 123, 123, 123,
        /*  1360 */
        123, 123, 105, 106, 107, 123, 109, 55, 123, 57,
        /*  1370 */
        58, 59, 60, 61, 4, 123, 64, 65, 123, 123,
        /*  1380 */
        123, 123, 123, 123, 123, 123, 123, 123, 123, 19,
        /*  1390 */
        20, 79, 123, 23, 24, 123, 26, 123, 123, 29,
        /*  1400 */
        123, 86, 123, 33, 34, 90, 36, 123, 38, 94,
        /*  1410 */
        123, 41, 123, 123, 123, 123, 123, 123, 123, 123,
        /*  1420 */
        105, 106, 107, 123, 109, 55, 123, 57, 58, 59,
        /*  1430 */
        60, 61, 4, 123, 64, 65, 123, 123, 123, 123,
        /*  1440 */
        123, 123, 123, 123, 123, 123, 123, 19, 20, 79,
        /*  1450 */
        123, 23, 24, 123, 26, 123, 123, 29, 123, 86,
        /*  1460 */
        123, 33, 34, 90, 36, 123, 38, 94, 123, 41,
        /*  1470 */
        123, 123, 123, 123, 123, 123, 123, 123, 105, 106,
        /*  1480 */
        107, 123, 109, 55, 123, 57, 58, 59, 60, 61,
        /*  1490 */
        4, 123, 64, 65, 123, 123, 123, 123, 123, 123,
        /*  1500 */
        123, 123, 123, 123, 123, 19, 20, 79, 123, 23,
        /*  1510 */
        24, 123, 26, 123, 123, 29, 91, 92, 123, 33,
        /*  1520 */
        34, 123, 36, 123, 38, 100, 123, 41, 103, 104,
        /*  1530 */
        123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
        /*  1540 */
        123, 55, 117, 57, 58, 59, 60, 61, 4, 123,
        /*  1550 */
        64, 65, 123, 123, 123, 123, 123, 123, 123, 123,
        /*  1560 */
        123, 123, 123, 19, 20, 79, 123, 23, 24, 123,
        /*  1570 */
        26, 123, 123, 29, 91, 92, 123, 33, 34, 123,
        /*  1580 */
        36, 123, 38, 100, 123, 41, 103, 104, 123, 123,
        /*  1590 */
        123, 123, 123, 123, 123, 123, 123, 123, 123, 55,
        /*  1600 */
        117, 57, 58, 59, 60, 61, 4, 123, 64, 123,
        /*  1610 */
        123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
        /*  1620 */
        123, 19, 20, 79, 123, 23, 24, 123, 26, 123,
        /*  1630 */
        123, 29, 123, 123, 123, 33, 34, 123, 36, 123,
        /*  1640 */
        38, 123, 123, 41, 123, 123, 123, 123, 123, 123,
        /*  1650 */
        123, 123, 123, 123, 123, 123, 123, 55, 123, 57,
        /*  1660 */
        58, 59, 60, 61, 3, 4, 64, 123, 7, 8,
        /*  1670 */
        9, 10, 11, 12, 13, 14, 15, 16, 6, 91,
        /*  1680 */
        92, 79, 123, 123, 23, 24, 123, 123, 100, 123,
        /*  1690 */
        29, 103, 104, 123, 33, 34, 123, 25, 123, 27,
        /*  1700 */
        28, 123, 30, 31, 123, 117, 123, 35, 86, 37,
        /*  1710 */
        38, 39, 90, 123, 1, 93, 94, 95, 123, 6,
        /*  1720 */
        123, 123, 123, 101, 102, 123, 54, 105, 106, 107,
        /*  1730 */
        123, 109, 91, 92, 62, 22, 123, 123, 66, 123,
        /*  1740 */
        123, 100, 123, 30, 103, 104, 86, 123, 35, 123,
        /*  1750 */
        90, 38, 80, 93, 94, 123, 123, 123, 117, 123,
        /*  1760 */
        123, 101, 102, 123, 86, 105, 106, 107, 90, 109,
        /*  1770 */
        123, 93, 94, 123, 123, 62, 116, 123, 123, 101,
        /*  1780 */
        102, 123, 123, 105, 106, 107, 86, 109, 123, 123,
        /*  1790 */
        90, 123, 123, 93, 94, 95, 86, 123, 120, 123,
        /*  1800 */
        90, 101, 102, 93, 94, 105, 106, 107, 123, 109,
        /*  1810 */
        123, 101, 102, 123, 86, 105, 106, 107, 90, 109,
        /*  1820 */
        123, 93, 94, 123, 123, 123, 116, 123, 123, 101,
        /*  1830 */
        102, 123, 123, 105, 106, 107, 123, 109, 123, 86,
        /*  1840 */
        91, 92, 123, 90, 116, 123, 93, 94, 123, 100,
        /*  1850 */
        123, 123, 103, 104, 101, 102, 123, 123, 105, 106,
        /*  1860 */
        107, 123, 109, 86, 123, 123, 117, 90, 123, 116,
        /*  1870 */
        93, 94, 123, 86, 123, 123, 123, 90, 101, 102,
        /*  1880 */
        93, 94, 105, 106, 107, 123, 109, 123, 101, 102,
        /*  1890 */
        123, 4, 105, 106, 107, 123, 109, 123, 123, 123,
        /*  1900 */
        13, 123, 123, 123, 123, 123, 91, 92, 123, 123,
        /*  1910 */
        23, 24, 123, 123, 123, 100, 29, 123, 103, 104,
        /*  1920 */
        33, 34, 86, 123, 123, 123, 90, 4, 123, 93,
        /*  1930 */
        94, 123, 117, 123, 123, 123, 13, 101, 102, 123,
        /*  1940 */
        123, 105, 106, 107, 123, 109, 23, 24, 123, 123,
        /*  1950 */
        123, 123, 29, 123, 86, 123, 33, 34, 90, 123,
        /*  1960 */
        123, 93, 94, 123, 123, 123, 79, 80, 81, 101,
        /*  1970 */
        102, 123, 123, 105, 106, 107, 86, 109, 123, 123,
        /*  1980 */
        90, 123, 123, 93, 94, 123, 123, 123, 123, 123,
        /*  1990 */
        123, 101, 102, 123, 123, 105, 106, 107, 123, 109,
        /*  2000 */
        123, 123, 79, 80, 81, 123, 123, 86, 123, 123,
        /*  2010 */
        123, 90, 123, 123, 93, 94, 123, 86, 123, 123,
        /*  2020 */
        123, 90, 101, 102, 93, 94, 105, 106, 107, 123,
        /*  2030 */
        109, 123, 101, 102, 123, 123, 105, 106, 107, 86,
        /*  2040 */
        109, 123, 123, 90, 123, 123, 93, 94, 123, 86,
        /*  2050 */
        123, 123, 123, 90, 101, 102, 93, 94, 105, 106,
        /*  2060 */
        107, 123, 109, 123, 101, 102, 123, 86, 105, 106,
        /*  2070 */
        107, 90, 109, 123, 93, 94, 123, 123, 123, 123,
        /*  2080 */
        123, 123, 101, 102, 123, 123, 105, 106, 107, 86,
        /*  2090 */
        109, 123, 123, 90, 123, 123, 93, 94, 123, 123,
        /*  2100 */
        123, 123, 123, 123, 101, 102, 123, 123, 105, 106,
        /*  2110 */
        107, 86, 109, 123, 123, 90, 123, 123, 93, 94,
        /*  2120 */
        123, 123, 123, 123, 123, 123, 101, 102, 123, 123,
        /*  2130 */
        105, 106, 107, 86, 109, 123, 123, 90, 123, 123,
        /*  2140 */
        93, 94, 123, 86, 123, 123, 123, 90, 101, 102,
        /*  2150 */
        93, 94, 105, 106, 107, 123, 109, 123, 101, 102,
        /*  2160 */
        123, 86, 105, 106, 107, 90, 109, 123, 93, 94,
        /*  2170 */
        123, 123, 123, 123, 123, 123, 101, 102, 123, 123,
        /*  2180 */
        105, 106, 107, 86, 109, 123, 123, 90, 123, 123,
        /*  2190 */
        93, 94, 123, 123, 123, 123, 123, 123, 101, 102,
        /*  2200 */
        123, 123, 105, 106, 107, 86, 109, 123, 123, 90,
        /*  2210 */
        123, 123, 93, 94, 123, 123, 123, 123, 123, 123,
        /*  2220 */
        101, 102, 123, 123, 105, 106, 107, 86, 109, 123,
        /*  2230 */
        123, 90, 123, 123, 93, 94, 123, 86, 123, 123,
        /*  2240 */
        123, 90, 101, 102, 93, 94, 105, 106, 107, 123,
        /*  2250 */
        109, 123, 101, 102, 123, 86, 105, 106, 107, 90,
        /*  2260 */
        109, 123, 93, 94, 123, 123, 123, 123, 123, 123,
        /*  2270 */
        101, 102, 123, 123, 105, 106, 107, 86, 109, 123,
        /*  2280 */
        123, 90, 123, 123, 93, 94, 123, 123, 123, 123,
        /*  2290 */
        123, 123, 101, 102, 123, 123, 105, 106, 107, 86,
        /*  2300 */
        109, 123, 123, 90, 123, 123, 93, 94, 123, 123,
        /*  2310 */
        123, 123, 123, 123, 101, 102, 123, 123, 105, 106,
        /*  2320 */
        107, 86, 109, 123, 123, 90, 123, 123, 93, 94,
        /*  2330 */
        123, 86, 123, 123, 123, 90, 101, 102, 93, 94,
        /*  2340 */
        105, 106, 107, 123, 109, 123, 101, 102, 123, 86,
        /*  2350 */
        105, 106, 107, 90, 109, 123, 93, 94, 123, 123,
        /*  2360 */
        123, 123, 123, 123, 101, 102, 123, 123, 105, 106,
        /*  2370 */
        107, 86, 109, 123, 123, 90, 123, 123, 93, 94,
        /*  2380 */
        123, 123, 123, 123, 123, 123, 101, 102, 123, 123,
        /*  2390 */
        105, 106, 107, 86, 109, 123, 123, 90, 123, 123,
        /*  2400 */
        93, 94, 123, 123, 123, 123, 123, 123, 101, 102,
        /*  2410 */
        123, 123, 105, 106, 107, 86, 109, 123, 123, 90,
        /*  2420 */
        123, 123, 93, 94, 123, 86, 123, 123, 123, 90,
        /*  2430 */
        101, 102, 93, 94, 105, 106, 107, 123, 109, 123,
        /*  2440 */
        101, 102, 123, 86, 105, 106, 107, 90, 109, 123,
        /*  2450 */
        93, 94, 123, 123, 123, 123, 123, 123, 101, 102,
        /*  2460 */
        123, 123, 105, 106, 107, 86, 109, 123, 123, 90,
        /*  2470 */
        123, 123, 93, 94, 123, 123, 123, 123, 123, 123,
        /*  2480 */
        101, 102, 123, 123, 105, 106, 107, 86, 109, 123,
        /*  2490 */
        123, 90, 123, 123, 93, 94, 123, 123, 123, 123,
        /*  2500 */
        123, 123, 101, 102, 123, 123, 105, 106, 107, 86,
        /*  2510 */
        109, 123, 123, 90, 123, 123, 93, 94, 123, 86,
        /*  2520 */
        123, 123, 123, 90, 101, 102, 93, 94, 105, 106,
        /*  2530 */
        107, 123, 109, 123, 101, 102, 123, 86, 105, 106,
        /*  2540 */
        107, 90, 109, 123, 93, 94, 123, 123, 123, 123,
        /*  2550 */
        123, 123, 101, 102, 123, 123, 105, 106, 107, 86,
        /*  2560 */
        109, 123, 123, 90, 123, 123, 93, 94, 123, 123,
        /*  2570 */
        123, 123, 91, 92, 101, 102, 123, 123, 105, 106,
        /*  2580 */
        107, 100, 109, 123, 103, 104, 123, 123, 123, 123,
        /*  2590 */
        123, 123, 123, 123, 123, 123, 123, 123, 117,
    );
    const YY_SHIFT_USE_DFLT = -35;
    const YY_SHIFT_MAX = 263;
    static public $yy_shift_ofst = array(
        /*     0 */
        1661, 1486, 1138, 1428, 1138, 1138, 1486, 1428, 1138, 1022,
        /*    10 */
        964, 1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138,
        /*    20 */
        1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138,
        /*    30 */
        1138, 1138, 1254, 1138, 1138, 1196, 1080, 1138, 1312, 1138,
        /*    40 */
        1138, 1138, 1138, 1254, 1196, 1138, 1370, 1370, 1544, 1602,
        /*    50 */
        1544, 1544, 1544, 1544, 1544, 158, 105, 52, -1, 211,
        /*    60 */
        211, 211, 211, 635, 689, 742, 529, 795, 476, 264,
        /*    70 */
        317, 370, 423, 582, 848, 848, 848, 848, 848, 848,
        /*    80 */
        848, 848, 848, 848, 848, 848, 848, 848, 848, 848,
        /*    90 */
        848, 848, 889, 889, 1713, 109, 374, 1661, 1923, 969,
        /*   100 */
        1032, 130, 1116, 130, 1116, 374, 183, 387, 374, 890,
        /*   110 */
        520, 1887, 206, 53, 107, 55, 923, 1034, 457, 165,
        /*   120 */
        111, 16, -2, 108, 483, 564, 1069, 812, 564, 564,
        /*   130 */
        564, 520, 564, 557, 1092, 1074, 564, 513, 520, 802,
        /*   140 */
        802, 133, 558, 564, 513, 564, 478, 564, 513, 678,
        /*   150 */
        694, 694, 694, 694, 694, 694, 694, 694, 678, -35,
        /*   160 */
        318, 319, 320, 366, 346, 316, 268, 214, 212, 162,
        /*   170 */
        215, 265, 267, 266, 373, 367, 156, 426, 424, 425,
        /*   180 */
        323, 987, 27, 60, 340, 340, 340, 449, 449, 242,
        /*   190 */
        474, 340, 85, 2, 340, 340, 340, 238, 678, 687,
        /*   200 */
        694, 678, 694, 687, 678, 238, 339, 173, -35, -35,
        /*   210 */
        -35, -35, -35, 1672, 1087, 1071, -34, -31, 254, 104,
        /*   220 */
        79, 26, 69, 512, 261, 3, 530, 419, 481, 261,
        /*   230 */
        341, 419, 638, 650, 661, 471, 647, 662, 646, 649,
        /*   240 */
        592, 671, 673, 690, 669, 651, 636, 627, 608, 552,
        /*   250 */
        553, 576, 591, 539, 570, 614, 619, 624, 625, 581,
        /*   260 */
        620, 648, 339, 622,
    );
    const YY_REDUCE_USE_DFLT = -85;
    const YY_REDUCE_MAX = 212;
    static public $yy_reduce_ofst = array(
        /*     0 */
        -72, -84, 1753, 1622, 1728, 1660, 1678, 1700, 1710, 1868,
        /*    10 */
        1836, 1921, 1963, 1953, 1931, 1981, 1777, 2003, 1890, 2473,
        /*    20 */
        2451, 2423, 2151, 2025, 2075, 2339, 2235, 2245, 2119, 1787,
        /*    30 */
        2433, 2357, 2329, 2285, 2263, 2307, 2379, 2213, 2191, 2057,
        /*    40 */
        2047, 2097, 2169, 1836, 2141, 2401, 963, 1025, 1315, 1199,
        /*    50 */
        1257, 1083, 1141, 1373, 926, 1425, 1483, 1588, 2481, 1425,
        /*    60 */
        1641, 1815, 1749, 891, 891, 891, 891, 891, 891, 891,
        /*    70 */
        891, 891, 891, 891, 891, 891, 891, 891, 891, 891,
        /*    80 */
        891, 891, 891, 891, 891, 891, 891, 891, 891, 891,
        /*    90 */
        891, 891, 891, 891, 228, 175, 177, 152, 312, 1094,
        /*   100 */
        1056, 336, 1063, 335, 918, 282, 78, 1076, 388, 372,
        /*   110 */
        412, 551, 502, -36, -36, -36, 403, 403, -36, -36,
        /*   120 */
        230, 451, 451, 442, 403, 447, 656, 451, 550, 549,
        /*   130 */
        497, 491, 657, 518, 497, 497, 178, 448, 466, 496,
        /*   140 */
        497, -36, 546, 763, 504, 709, 445, -82, 506, 451,
        /*   150 */
        -36, -36, -36, -36, -36, -36, -36, -36, 216, -36,
        /*   160 */
        596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
        /*   170 */
        596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
        /*   180 */
        587, 587, 596, 583, 586, 586, 586, 605, 609, 599,
        /*   190 */
        611, 586, 599, 599, 586, 586, 586, 76, 315, 623,
        /*   200 */
        599, 315, 599, 621, 315, 76, 57, 452, 411, 350,
        /*   210 */
        352, 273, 327,
    );
    static public $yyExpectedTokens = array(
        /* 0 */
        array(3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 23, 24, 29, 33, 34,),
        /* 1 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 2 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 3 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 4 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 5 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 6 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 7 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 8 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 9 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 66, 79,),
        /* 10 */
        array(4, 5, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 11 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 12 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 13 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 14 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 15 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 16 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 17 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 18 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 19 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 20 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 21 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 22 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 23 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 24 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 25 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 26 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 27 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 28 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 29 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 30 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 31 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 32 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 33 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 34 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 35 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 36 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 37 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 38 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 39 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 40 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 41 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 42 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 43 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 44 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 45 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 46 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 47 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79,),
        /* 48 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79,),
        /* 49 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79,),
        /* 50 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79,),
        /* 51 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79,),
        /* 52 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79,),
        /* 53 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79,),
        /* 54 */
        array(4, 19, 20, 23, 24, 26, 29, 33, 34, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79,),
        /* 55 */
        array(1, 6, 30, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 56 */
        array(1, 6, 30, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 57 */
        array(1, 6, 30, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 58 */
        array(1, 28, 30, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 59 */
        array(1, 30, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 60 */
        array(1, 30, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 61 */
        array(1, 30, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 62 */
        array(1, 30, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 63 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 64 */
        array(1, 25, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 65 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 66 */
        array(1, 6, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 67 */
        array(1, 6, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 68 */
        array(1, 6, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 69 */
        array(1, 6, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 70 */
        array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 71 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80,),
        /* 72 */
        array(1, 2, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 73 */
        array(1, 31, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 74 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 75 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 76 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 77 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 78 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 79 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 80 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 81 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 82 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 83 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 84 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 85 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 86 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 87 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 88 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 89 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 90 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 91 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 92 */
        array(40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 93 */
        array(40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,),
        /* 94 */
        array(1, 6, 22, 30, 35, 38, 62,),
        /* 95 */
        array(1, 6, 30, 35, 54,),
        /* 96 */
        array(1, 30, 35,),
        /* 97 */
        array(3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 23, 24, 29, 33, 34,),
        /* 98 */
        array(4, 13, 23, 24, 29, 33, 34, 79, 80, 81,),
        /* 99 */
        array(4, 20, 30, 32, 35,),
        /* 100 */
        array(4, 20, 30, 32, 35,),
        /* 101 */
        array(1, 6, 30, 35,),
        /* 102 */
        array(4, 20, 30, 35,),
        /* 103 */
        array(1, 6, 30, 35,),
        /* 104 */
        array(4, 20, 30, 35,),
        /* 105 */
        array(1, 30, 35,),
        /* 106 */
        array(1, 2, 6,),
        /* 107 */
        array(19, 20, 64,),
        /* 108 */
        array(1, 30, 35,),
        /* 109 */
        array(22, 60, 65,),
        /* 110 */
        array(19, 38,),
        /* 111 */
        array(4, 13, 23, 24, 29, 33, 34, 79, 80, 81,),
        /* 112 */
        array(7, 8, 9, 10, 11, 16, 17, 18,),
        /* 113 */
        array(1, 6, 30, 31, 35, 54,),
        /* 114 */
        array(1, 6, 30, 35, 54,),
        /* 115 */
        array(1, 6, 30, 35, 54,),
        /* 116 */
        array(4, 20, 21, 63,),
        /* 117 */
        array(4, 20, 63,),
        /* 118 */
        array(1, 32, 54,),
        /* 119 */
        array(1, 6, 54,),
        /* 120 */
        array(1, 6, 22,),
        /* 121 */
        array(21, 22, 62,),
        /* 122 */
        array(21, 22, 62,),
        /* 123 */
        array(6, 30, 35,),
        /* 124 */
        array(4, 20, 21,),
        /* 125 */
        array(4, 20,),
        /* 126 */
        array(4, 20,),
        /* 127 */
        array(22, 62,),
        /* 128 */
        array(4, 20,),
        /* 129 */
        array(4, 20,),
        /* 130 */
        array(4, 20,),
        /* 131 */
        array(19, 38,),
        /* 132 */
        array(4, 20,),
        /* 133 */
        array(30, 35,),
        /* 134 */
        array(4, 20,),
        /* 135 */
        array(4, 20,),
        /* 136 */
        array(4, 20,),
        /* 137 */
        array(19, 20,),
        /* 138 */
        array(19, 38,),
        /* 139 */
        array(4, 20,),
        /* 140 */
        array(4, 20,),
        /* 141 */
        array(1, 54,),
        /* 142 */
        array(30, 35,),
        /* 143 */
        array(4, 20,),
        /* 144 */
        array(19, 20,),
        /* 145 */
        array(4, 20,),
        /* 146 */
        array(1, 6,),
        /* 147 */
        array(4, 20,),
        /* 148 */
        array(19, 20,),
        /* 149 */
        array(22,),
        /* 150 */
        array(1,),
        /* 151 */
        array(1,),
        /* 152 */
        array(1,),
        /* 153 */
        array(1,),
        /* 154 */
        array(1,),
        /* 155 */
        array(1,),
        /* 156 */
        array(1,),
        /* 157 */
        array(1,),
        /* 158 */
        array(22,),
        /* 159 */
        array(),
        /* 160 */
        array(6, 30, 35,),
        /* 161 */
        array(6, 30, 35,),
        /* 162 */
        array(6, 30, 35,),
        /* 163 */
        array(6, 30, 35,),
        /* 164 */
        array(6, 30, 35,),
        /* 165 */
        array(6, 30, 35,),
        /* 166 */
        array(6, 30, 35,),
        /* 167 */
        array(6, 30, 35,),
        /* 168 */
        array(6, 30, 35,),
        /* 169 */
        array(6, 30, 35,),
        /* 170 */
        array(6, 30, 35,),
        /* 171 */
        array(6, 30, 35,),
        /* 172 */
        array(6, 30, 35,),
        /* 173 */
        array(6, 30, 35,),
        /* 174 */
        array(6, 30, 35,),
        /* 175 */
        array(6, 30, 35,),
        /* 176 */
        array(6, 30, 35,),
        /* 177 */
        array(6, 30, 35,),
        /* 178 */
        array(6, 30, 35,),
        /* 179 */
        array(6, 30, 35,),
        /* 180 */
        array(4, 20, 21,),
        /* 181 */
        array(4, 20, 63,),
        /* 182 */
        array(6, 30, 35,),
        /* 183 */
        array(4, 19, 20,),
        /* 184 */
        array(60, 65,),
        /* 185 */
        array(60, 65,),
        /* 186 */
        array(60, 65,),
        /* 187 */
        array(60, 65,),
        /* 188 */
        array(60, 65,),
        /* 189 */
        array(1, 6,),
        /* 190 */
        array(4, 38,),
        /* 191 */
        array(60, 65,),
        /* 192 */
        array(1, 6,),
        /* 193 */
        array(1, 6,),
        /* 194 */
        array(60, 65,),
        /* 195 */
        array(60, 65,),
        /* 196 */
        array(60, 65,),
        /* 197 */
        array(2,),
        /* 198 */
        array(22,),
        /* 199 */
        array(30,),
        /* 200 */
        array(1,),
        /* 201 */
        array(22,),
        /* 202 */
        array(1,),
        /* 203 */
        array(30,),
        /* 204 */
        array(22,),
        /* 205 */
        array(2,),
        /* 206 */
        array(38,),
        /* 207 */
        array(17,),
        /* 208 */
        array(),
        /* 209 */
        array(),
        /* 210 */
        array(),
        /* 211 */
        array(),
        /* 212 */
        array(),
        /* 213 */
        array(6, 25, 27, 28, 30, 31, 35, 37, 38, 39, 54, 62, 66, 80,),
        /* 214 */
        array(6, 21, 30, 35, 38, 62,),
        /* 215 */
        array(4, 19, 20, 36,),
        /* 216 */
        array(38, 60, 62, 66,),
        /* 217 */
        array(32, 38, 62,),
        /* 218 */
        array(37, 39,),
        /* 219 */
        array(37, 66,),
        /* 220 */
        array(37, 39,),
        /* 221 */
        array(37, 39,),
        /* 222 */
        array(20, 63,),
        /* 223 */
        array(19, 26,),
        /* 224 */
        array(38, 62,),
        /* 225 */
        array(2, 21,),
        /* 226 */
        array(25, 37,),
        /* 227 */
        array(38, 62,),
        /* 228 */
        array(21, 60,),
        /* 229 */
        array(38, 62,),
        /* 230 */
        array(37, 39,),
        /* 231 */
        array(38, 62,),
        /* 232 */
        array(56,),
        /* 233 */
        array(19,),
        /* 234 */
        array(6,),
        /* 235 */
        array(66,),
        /* 236 */
        array(19,),
        /* 237 */
        array(2,),
        /* 238 */
        array(19,),
        /* 239 */
        array(21,),
        /* 240 */
        array(80,),
        /* 241 */
        array(20,),
        /* 242 */
        array(20,),
        /* 243 */
        array(2,),
        /* 244 */
        array(20,),
        /* 245 */
        array(20,),
        /* 246 */
        array(38,),
        /* 247 */
        array(36,),
        /* 248 */
        array(36,),
        /* 249 */
        array(64,),
        /* 250 */
        array(64,),
        /* 251 */
        array(39,),
        /* 252 */
        array(20,),
        /* 253 */
        array(27,),
        /* 254 */
        array(20,),
        /* 255 */
        array(6,),
        /* 256 */
        array(20,),
        /* 257 */
        array(19,),
        /* 258 */
        array(20,),
        /* 259 */
        array(60,),
        /* 260 */
        array(20,),
        /* 261 */
        array(20,),
        /* 262 */
        array(38,),
        /* 263 */
        array(20,),
        /* 264 */
        array(),
        /* 265 */
        array(),
        /* 266 */
        array(),
        /* 267 */
        array(),
        /* 268 */
        array(),
        /* 269 */
        array(),
        /* 270 */
        array(),
        /* 271 */
        array(),
        /* 272 */
        array(),
        /* 273 */
        array(),
        /* 274 */
        array(),
        /* 275 */
        array(),
        /* 276 */
        array(),
        /* 277 */
        array(),
        /* 278 */
        array(),
        /* 279 */
        array(),
        /* 280 */
        array(),
        /* 281 */
        array(),
        /* 282 */
        array(),
        /* 283 */
        array(),
        /* 284 */
        array(),
        /* 285 */
        array(),
        /* 286 */
        array(),
        /* 287 */
        array(),
        /* 288 */
        array(),
        /* 289 */
        array(),
        /* 290 */
        array(),
        /* 291 */
        array(),
        /* 292 */
        array(),
        /* 293 */
        array(),
        /* 294 */
        array(),
        /* 295 */
        array(),
        /* 296 */
        array(),
        /* 297 */
        array(),
        /* 298 */
        array(),
        /* 299 */
        array(),
        /* 300 */
        array(),
        /* 301 */
        array(),
        /* 302 */
        array(),
        /* 303 */
        array(),
        /* 304 */
        array(),
        /* 305 */
        array(),
        /* 306 */
        array(),
        /* 307 */
        array(),
        /* 308 */
        array(),
        /* 309 */
        array(),
        /* 310 */
        array(),
        /* 311 */
        array(),
        /* 312 */
        array(),
        /* 313 */
        array(),
        /* 314 */
        array(),
        /* 315 */
        array(),
        /* 316 */
        array(),
        /* 317 */
        array(),
        /* 318 */
        array(),
        /* 319 */
        array(),
        /* 320 */
        array(),
        /* 321 */
        array(),
        /* 322 */
        array(),
        /* 323 */
        array(),
        /* 324 */
        array(),
        /* 325 */
        array(),
        /* 326 */
        array(),
        /* 327 */
        array(),
        /* 328 */
        array(),
        /* 329 */
        array(),
        /* 330 */
        array(),
        /* 331 */
        array(),
        /* 332 */
        array(),
        /* 333 */
        array(),
        /* 334 */
        array(),
        /* 335 */
        array(),
        /* 336 */
        array(),
        /* 337 */
        array(),
        /* 338 */
        array(),
        /* 339 */
        array(),
        /* 340 */
        array(),
        /* 341 */
        array(),
        /* 342 */
        array(),
        /* 343 */
        array(),
        /* 344 */
        array(),
        /* 345 */
        array(),
        /* 346 */
        array(),
        /* 347 */
        array(),
        /* 348 */
        array(),
        /* 349 */
        array(),
        /* 350 */
        array(),
        /* 351 */
        array(),
        /* 352 */
        array(),
        /* 353 */
        array(),
        /* 354 */
        array(),
        /* 355 */
        array(),
        /* 356 */
        array(),
        /* 357 */
        array(),
        /* 358 */
        array(),
        /* 359 */
        array(),
        /* 360 */
        array(),
        /* 361 */
        array(),
        /* 362 */
        array(),
        /* 363 */
        array(),
        /* 364 */
        array(),
        /* 365 */
        array(),
        /* 366 */
        array(),
        /* 367 */
        array(),
        /* 368 */
        array(),
        /* 369 */
        array(),
        /* 370 */
        array(),
        /* 371 */
        array(),
        /* 372 */
        array(),
        /* 373 */
        array(),
        /* 374 */
        array(),
        /* 375 */
        array(),
        /* 376 */
        array(),
        /* 377 */
        array(),
        /* 378 */
        array(),
        /* 379 */
        array(),
        /* 380 */
        array(),
        /* 381 */
        array(),
        /* 382 */
        array(),
        /* 383 */
        array(),
        /* 384 */
        array(),
        /* 385 */
        array(),
        /* 386 */
        array(),
        /* 387 */
        array(),
        /* 388 */
        array(),
        /* 389 */
        array(),
        /* 390 */
        array(),
        /* 391 */
        array(),
        /* 392 */
        array(),
        /* 393 */
        array(),
        /* 394 */
        array(),
        /* 395 */
        array(),
        /* 396 */
        array(),
        /* 397 */
        array(),
        /* 398 */
        array(),
        /* 399 */
        array(),
        /* 400 */
        array(),
    );
    static public $yy_default = array(
        /*     0 */
        404, 591, 562, 608, 562, 562, 608, 608, 562, 608,
        /*    10 */
        608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
        /*    20 */
        608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
        /*    30 */
        608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
        /*    40 */
        608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
        /*    50 */
        608, 608, 608, 608, 608, 608, 608, 608, 464, 464,
        /*    60 */
        464, 464, 464, 608, 608, 608, 608, 608, 608, 608,
        /*    70 */
        608, 608, 608, 469, 489, 474, 561, 471, 498, 560,
        /*    80 */
        488, 490, 466, 494, 469, 485, 592, 593, 475, 493,
        /*    90 */
        594, 497, 502, 503, 513, 477, 464, 401, 608, 464,
        /*   100 */
        464, 484, 464, 524, 464, 464, 608, 608, 464, 574,
        /*   110 */
        608, 608, 608, 477, 477, 477, 534, 534, 477, 477,
        /*   120 */
        608, 525, 525, 608, 534, 534, 608, 525, 608, 608,
        /*   130 */
        608, 608, 608, 464, 608, 608, 608, 608, 608, 608,
        /*   140 */
        608, 477, 464, 608, 608, 608, 608, 608, 608, 525,
        /*   150 */
        505, 501, 481, 507, 480, 506, 487, 482, 571, 569,
        /*   160 */
        608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
        /*   170 */
        608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
        /*   180 */
        608, 535, 608, 608, 532, 552, 529, 528, 530, 608,
        /*   190 */
        534, 531, 608, 608, 554, 551, 553, 564, 548, 607,
        /*   200 */
        524, 575, 484, 607, 572, 563, 534, 421, 568, 568,
        /*   210 */
        534, 534, 568, 479, 513, 608, 513, 513, 608, 608,
        /*   220 */
        608, 608, 608, 608, 500, 546, 608, 513, 509, 521,
        /*   230 */
        608, 499, 515, 608, 504, 608, 608, 546, 608, 608,
        /*   240 */
        504, 608, 608, 546, 608, 608, 573, 608, 511, 608,
        /*   250 */
        608, 608, 608, 472, 608, 608, 608, 608, 608, 509,
        /*   260 */
        608, 608, 546, 608, 402, 556, 417, 426, 557, 428,
        /*   270 */
        539, 427, 515, 424, 420, 448, 422, 423, 465, 431,
        /*   280 */
        606, 473, 419, 449, 450, 445, 446, 476, 408, 455,
        /*   290 */
        547, 425, 570, 558, 415, 418, 414, 413, 410, 409,
        /*   300 */
        411, 412, 454, 416, 523, 479, 478, 526, 533, 536,
        /*   310 */
        519, 512, 461, 504, 508, 510, 544, 537, 486, 522,
        /*   320 */
        549, 550, 520, 518, 538, 514, 516, 517, 460, 566,
        /*   330 */
        462, 443, 444, 447, 430, 429, 403, 405, 406, 407,
        /*   340 */
        463, 451, 567, 458, 459, 565, 457, 456, 452, 453,
        /*   350 */
        545, 546, 491, 492, 596, 597, 600, 599, 595, 602,
        /*   360 */
        439, 440, 442, 441, 601, 604, 555, 542, 540, 541,
        /*   370 */
        559, 589, 605, 598, 588, 590, 438, 437, 580, 581,
        /*   380 */
        582, 583, 579, 578, 495, 496, 576, 577, 584, 585,
        /*   390 */
        603, 434, 435, 436, 433, 432, 586, 587, 483, 527,
        /*   400 */
        543,
    );
    const YYNOCODE = 124;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 401;
    const YYNRULE = 207;
    const YYERRORSYMBOL = 82;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    static public $yyFallback = array();

    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    static public $yyTraceFILE;
    static public $yyTracePrompt;
    public $yyidx; /* Index of top element in stack */
    public $yyerrcnt; /* Shifts left before out of the error */
    public $yystack = array(); /* The parser's stack */

    public $yyTokenName = array(
        '$', 'VERT', 'COLON', 'TEMPLATEINIT',
        'LDEL', 'COMMENT', 'RDEL', 'PHPSTARTTAG',
        'PHPENDTAG', 'ASPSTARTTAG', 'ASPENDTAG', 'FAKEPHPSTARTTAG',
        'XMLTAG', 'TEXT', 'STRIPON', 'STRIPOFF',
        'LITERALSTART', 'LITERALEND', 'LITERAL', 'DOLLAR',
        'ID', 'EQUAL', 'PTR', 'LDELIF',
        'LDELFOR', 'SEMICOLON', 'IDINCDEC', 'TO',
        'STEP', 'LDELFOREACH', 'SPACE', 'AS',
        'APTR', 'LDELSETFILTER', 'LDELSLASH', 'ATTR',
        'INTEGER', 'COMMA', 'OPENP', 'CLOSEP',
        'MATH', 'UNIMATH', 'ANDSYM', 'ISIN',
        'ISDIVBY', 'ISNOTDIVBY', 'ISEVEN', 'ISNOTEVEN',
        'ISEVENBY', 'ISNOTEVENBY', 'ISODD', 'ISNOTODD',
        'ISODDBY', 'ISNOTODDBY', 'INSTANCEOF', 'NAMESPACE',
        'QMARK', 'NOT', 'TYPECAST', 'HEX',
        'DOT', 'SINGLEQUOTESTRING', 'DOUBLECOLON', 'AT',
        'HATCH', 'OPENB', 'CLOSEB', 'EQUALS',
        'NOTEQUALS', 'GREATERTHAN', 'LESSTHAN', 'GREATEREQUAL',
        'LESSEQUAL', 'IDENTITY', 'NONEIDENTITY', 'MOD',
        'LAND', 'LOR', 'LXOR', 'QUOTE',
        'BACKTICK', 'DOLLARID', 'error', 'start',
        'template', 'template_element', 'smartytag', 'literal',
        'literal_elements', 'literal_element', 'value', 'modifierlist',
        'attributes', 'expr', 'varindexed', 'statement',
        'statements', 'optspace', 'varvar', 'modparameters',
        'attribute', 'ternary', 'array', 'ifcond',
        'lop', 'variable', 'function', 'doublequoted_with_quotes',
        'static_class_access', 'object', 'arrayindex', 'indexdef',
        'varvarele', 'objectchain', 'objectelement', 'method',
        'params', 'modifier', 'modparameter', 'arrayelements',
        'arrayelement', 'doublequoted', 'doublequotedcontent',
    );

    static public $yyRuleName = array(
        /*   0 */
        "start ::= template",
        /*   1 */
        "template ::= template_element",
        /*   2 */
        "template ::= template template_element",
        /*   3 */
        "template ::=",
        /*   4 */
        "template_element ::= TEMPLATEINIT",
        /*   5 */
        "template_element ::= smartytag",
        /*   6 */
        "template_element ::= LDEL COMMENT RDEL",
        /*   7 */
        "template_element ::= literal",
        /*   8 */
        "template_element ::= PHPSTARTTAG",
        /*   9 */
        "template_element ::= PHPENDTAG",
        /*  10 */
        "template_element ::= ASPSTARTTAG",
        /*  11 */
        "template_element ::= ASPENDTAG",
        /*  12 */
        "template_element ::= FAKEPHPSTARTTAG",
        /*  13 */
        "template_element ::= XMLTAG",
        /*  14 */
        "template_element ::= TEXT",
        /*  15 */
        "template_element ::= STRIPON",
        /*  16 */
        "template_element ::= STRIPOFF",
        /*  17 */
        "literal ::= LITERALSTART LITERALEND",
        /*  18 */
        "literal ::= LITERALSTART literal_elements LITERALEND",
        /*  19 */
        "literal_elements ::= literal_elements literal_element",
        /*  20 */
        "literal_elements ::=",
        /*  21 */
        "literal_element ::= literal",
        /*  22 */
        "literal_element ::= LITERAL",
        /*  23 */
        "literal_element ::= PHPSTARTTAG",
        /*  24 */
        "literal_element ::= FAKEPHPSTARTTAG",
        /*  25 */
        "literal_element ::= PHPENDTAG",
        /*  26 */
        "literal_element ::= ASPSTARTTAG",
        /*  27 */
        "literal_element ::= ASPENDTAG",
        /*  28 */
        "smartytag ::= LDEL value RDEL",
        /*  29 */
        "smartytag ::= LDEL value modifierlist attributes RDEL",
        /*  30 */
        "smartytag ::= LDEL value attributes RDEL",
        /*  31 */
        "smartytag ::= LDEL expr modifierlist attributes RDEL",
        /*  32 */
        "smartytag ::= LDEL expr attributes RDEL",
        /*  33 */
        "smartytag ::= LDEL DOLLAR ID EQUAL value RDEL",
        /*  34 */
        "smartytag ::= LDEL DOLLAR ID EQUAL expr RDEL",
        /*  35 */
        "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes RDEL",
        /*  36 */
        "smartytag ::= LDEL varindexed EQUAL expr attributes RDEL",
        /*  37 */
        "smartytag ::= LDEL ID attributes RDEL",
        /*  38 */
        "smartytag ::= LDEL ID RDEL",
        /*  39 */
        "smartytag ::= LDEL ID PTR ID attributes RDEL",
        /*  40 */
        "smartytag ::= LDEL ID modifierlist attributes RDEL",
        /*  41 */
        "smartytag ::= LDEL ID PTR ID modifierlist attributes RDEL",
        /*  42 */
        "smartytag ::= LDELIF expr RDEL",
        /*  43 */
        "smartytag ::= LDELIF expr attributes RDEL",
        /*  44 */
        "smartytag ::= LDELIF statement RDEL",
        /*  45 */
        "smartytag ::= LDELIF statement attributes RDEL",
        /*  46 */
        "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar EQUAL expr attributes RDEL",
        /*  47 */
        "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace IDINCDEC attributes RDEL",
        /*  48 */
        "smartytag ::= LDELFOR statement TO expr attributes RDEL",
        /*  49 */
        "smartytag ::= LDELFOR statement TO expr STEP expr attributes RDEL",
        /*  50 */
        "smartytag ::= LDELFOREACH attributes RDEL",
        /*  51 */
        "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar attributes RDEL",
        /*  52 */
        "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar attributes RDEL",
        /*  53 */
        "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar attributes RDEL",
        /*  54 */
        "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar APTR DOLLAR varvar attributes RDEL",
        /*  55 */
        "smartytag ::= LDELSETFILTER ID modparameters RDEL",
        /*  56 */
        "smartytag ::= LDELSETFILTER ID modparameters modifierlist RDEL",
        /*  57 */
        "smartytag ::= LDELSLASH ID RDEL",
        /*  58 */
        "smartytag ::= LDELSLASH ID modifierlist RDEL",
        /*  59 */
        "smartytag ::= LDELSLASH ID PTR ID RDEL",
        /*  60 */
        "smartytag ::= LDELSLASH ID PTR ID modifierlist RDEL",
        /*  61 */
        "attributes ::= attributes attribute",
        /*  62 */
        "attributes ::= attribute",
        /*  63 */
        "attributes ::=",
        /*  64 */
        "attribute ::= SPACE ID EQUAL ID",
        /*  65 */
        "attribute ::= ATTR expr",
        /*  66 */
        "attribute ::= ATTR value",
        /*  67 */
        "attribute ::= SPACE ID",
        /*  68 */
        "attribute ::= SPACE expr",
        /*  69 */
        "attribute ::= SPACE value",
        /*  70 */
        "attribute ::= SPACE INTEGER EQUAL expr",
        /*  71 */
        "statements ::= statement",
        /*  72 */
        "statements ::= statements COMMA statement",
        /*  73 */
        "statement ::= DOLLAR varvar EQUAL expr",
        /*  74 */
        "statement ::= varindexed EQUAL expr",
        /*  75 */
        "statement ::= OPENP statement CLOSEP",
        /*  76 */
        "expr ::= value",
        /*  77 */
        "expr ::= ternary",
        /*  78 */
        "expr ::= DOLLAR ID COLON ID",
        /*  79 */
        "expr ::= expr MATH value",
        /*  80 */
        "expr ::= expr UNIMATH value",
        /*  81 */
        "expr ::= expr ANDSYM value",
        /*  82 */
        "expr ::= array",
        /*  83 */
        "expr ::= expr modifierlist",
        /*  84 */
        "expr ::= expr ifcond expr",
        /*  85 */
        "expr ::= expr ISIN array",
        /*  86 */
        "expr ::= expr ISIN value",
        /*  87 */
        "expr ::= expr lop expr",
        /*  88 */
        "expr ::= expr ISDIVBY expr",
        /*  89 */
        "expr ::= expr ISNOTDIVBY expr",
        /*  90 */
        "expr ::= expr ISEVEN",
        /*  91 */
        "expr ::= expr ISNOTEVEN",
        /*  92 */
        "expr ::= expr ISEVENBY expr",
        /*  93 */
        "expr ::= expr ISNOTEVENBY expr",
        /*  94 */
        "expr ::= expr ISODD",
        /*  95 */
        "expr ::= expr ISNOTODD",
        /*  96 */
        "expr ::= expr ISODDBY expr",
        /*  97 */
        "expr ::= expr ISNOTODDBY expr",
        /*  98 */
        "expr ::= value INSTANCEOF ID",
        /*  99 */
        "expr ::= value INSTANCEOF NAMESPACE",
        /* 100 */
        "expr ::= value INSTANCEOF value",
        /* 101 */
        "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
        /* 102 */
        "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
        /* 103 */
        "value ::= variable",
        /* 104 */
        "value ::= UNIMATH value",
        /* 105 */
        "value ::= NOT value",
        /* 106 */
        "value ::= TYPECAST value",
        /* 107 */
        "value ::= HEX",
        /* 108 */
        "value ::= INTEGER",
        /* 109 */
        "value ::= INTEGER DOT INTEGER",
        /* 110 */
        "value ::= INTEGER DOT",
        /* 111 */
        "value ::= DOT INTEGER",
        /* 112 */
        "value ::= ID",
        /* 113 */
        "value ::= function",
        /* 114 */
        "value ::= OPENP expr CLOSEP",
        /* 115 */
        "value ::= SINGLEQUOTESTRING",
        /* 116 */
        "value ::= doublequoted_with_quotes",
        /* 117 */
        "value ::= IDINCDEC",
        /* 118 */
        "value ::= ID DOUBLECOLON static_class_access",
        /* 119 */
        "value ::= NAMESPACE DOUBLECOLON static_class_access",
        /* 120 */
        "value ::= NAMESPACE",
        /* 121 */
        "value ::= varindexed DOUBLECOLON static_class_access",
        /* 122 */
        "value ::= smartytag",
        /* 123 */
        "value ::= value modifierlist",
        /* 124 */
        "variable ::= varindexed",
        /* 125 */
        "variable ::= DOLLAR varvar AT ID",
        /* 126 */
        "variable ::= object",
        /* 127 */
        "variable ::= HATCH ID HATCH",
        /* 128 */
        "variable ::= HATCH ID HATCH arrayindex",
        /* 129 */
        "variable ::= HATCH variable HATCH",
        /* 130 */
        "variable ::= HATCH variable HATCH arrayindex",
        /* 131 */
        "varindexed ::= DOLLAR varvar arrayindex",
        /* 132 */
        "arrayindex ::= arrayindex indexdef",
        /* 133 */
        "arrayindex ::=",
        /* 134 */
        "indexdef ::= DOT DOLLAR varvar",
        /* 135 */
        "indexdef ::= DOT DOLLAR varvar AT ID",
        /* 136 */
        "indexdef ::= DOT ID",
        /* 137 */
        "indexdef ::= DOT INTEGER",
        /* 138 */
        "indexdef ::= DOT LDEL expr RDEL",
        /* 139 */
        "indexdef ::= OPENB ID CLOSEB",
        /* 140 */
        "indexdef ::= OPENB ID DOT ID CLOSEB",
        /* 141 */
        "indexdef ::= OPENB expr CLOSEB",
        /* 142 */
        "indexdef ::= OPENB CLOSEB",
        /* 143 */
        "varvar ::= varvarele",
        /* 144 */
        "varvar ::= varvar varvarele",
        /* 145 */
        "varvarele ::= ID",
        /* 146 */
        "varvarele ::= LDEL expr RDEL",
        /* 147 */
        "object ::= varindexed objectchain",
        /* 148 */
        "objectchain ::= objectelement",
        /* 149 */
        "objectchain ::= objectchain objectelement",
        /* 150 */
        "objectelement ::= PTR ID arrayindex",
        /* 151 */
        "objectelement ::= PTR DOLLAR varvar arrayindex",
        /* 152 */
        "objectelement ::= PTR LDEL expr RDEL arrayindex",
        /* 153 */
        "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
        /* 154 */
        "objectelement ::= PTR method",
        /* 155 */
        "function ::= ID OPENP params CLOSEP",
        /* 156 */
        "function ::= NAMESPACE OPENP params CLOSEP",
        /* 157 */
        "method ::= ID OPENP params CLOSEP",
        /* 158 */
        "method ::= DOLLAR ID OPENP params CLOSEP",
        /* 159 */
        "params ::= params COMMA expr",
        /* 160 */
        "params ::= expr",
        /* 161 */
        "params ::=",
        /* 162 */
        "modifierlist ::= modifierlist modifier modparameters",
        /* 163 */
        "modifierlist ::= modifier modparameters",
        /* 164 */
        "modifier ::= VERT AT ID",
        /* 165 */
        "modifier ::= VERT ID",
        /* 166 */
        "modparameters ::= modparameters modparameter",
        /* 167 */
        "modparameters ::=",
        /* 168 */
        "modparameter ::= COLON value",
        /* 169 */
        "modparameter ::= COLON array",
        /* 170 */
        "static_class_access ::= method",
        /* 171 */
        "static_class_access ::= method objectchain",
        /* 172 */
        "static_class_access ::= ID",
        /* 173 */
        "static_class_access ::= DOLLAR ID arrayindex",
        /* 174 */
        "static_class_access ::= DOLLAR ID arrayindex objectchain",
        /* 175 */
        "ifcond ::= EQUALS",
        /* 176 */
        "ifcond ::= NOTEQUALS",
        /* 177 */
        "ifcond ::= GREATERTHAN",
        /* 178 */
        "ifcond ::= LESSTHAN",
        /* 179 */
        "ifcond ::= GREATEREQUAL",
        /* 180 */
        "ifcond ::= LESSEQUAL",
        /* 181 */
        "ifcond ::= IDENTITY",
        /* 182 */
        "ifcond ::= NONEIDENTITY",
        /* 183 */
        "ifcond ::= MOD",
        /* 184 */
        "lop ::= LAND",
        /* 185 */
        "lop ::= LOR",
        /* 186 */
        "lop ::= LXOR",
        /* 187 */
        "array ::= OPENB arrayelements CLOSEB",
        /* 188 */
        "arrayelements ::= arrayelement",
        /* 189 */
        "arrayelements ::= arrayelements COMMA arrayelement",
        /* 190 */
        "arrayelements ::=",
        /* 191 */
        "arrayelement ::= value APTR expr",
        /* 192 */
        "arrayelement ::= ID APTR expr",
        /* 193 */
        "arrayelement ::= expr",
        /* 194 */
        "doublequoted_with_quotes ::= QUOTE QUOTE",
        /* 195 */
        "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
        /* 196 */
        "doublequoted ::= doublequoted doublequotedcontent",
        /* 197 */
        "doublequoted ::= doublequotedcontent",
        /* 198 */
        "doublequotedcontent ::= BACKTICK variable BACKTICK",
        /* 199 */
        "doublequotedcontent ::= BACKTICK expr BACKTICK",
        /* 200 */
        "doublequotedcontent ::= DOLLARID",
        /* 201 */
        "doublequotedcontent ::= LDEL variable RDEL",
        /* 202 */
        "doublequotedcontent ::= LDEL expr RDEL",
        /* 203 */
        "doublequotedcontent ::= smartytag",
        /* 204 */
        "doublequotedcontent ::= TEXT",
        /* 205 */
        "optspace ::= SPACE",
        /* 206 */
        "optspace ::=",
    );

    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:
                break; /* If no destructor action specified: do nothing */
        }
    }

    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                        $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                        if (in_array($token,
                            self::$yyExpectedTokens[$nextstate], true)
                        ) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return array_unique($expected);
    }

    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                        in_array($token, self::$yyExpectedTokens[$nextstate], true)
                    ) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

    function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
            self::$yy_lookahead[$i] != $iLookAhead
        ) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                && ($iFallback = self::$yyFallback[$iLookAhead]) != 0
            ) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
            self::$yy_lookahead[$i] != $iLookAhead
        ) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 99 "smarty_internal_template_parser.y"

            $this->internalError = true;
            $this->compiler->trigger_template_error("Stack overflow in template parser");
#line 1798 "smarty_internal_template_parser.php"
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE, "\n");
        }
    }

    static public $yyRuleInfo = array(
        array('lhs' => 83, 'rhs' => 1),
        array('lhs' => 84, 'rhs' => 1),
        array('lhs' => 84, 'rhs' => 2),
        array('lhs' => 84, 'rhs' => 0),
        array('lhs' => 85, 'rhs' => 1),
        array('lhs' => 85, 'rhs' => 1),
        array('lhs' => 85, 'rhs' => 3),
        array('lhs' => 85, 'rhs' => 1),
        array('lhs' => 85, 'rhs' => 1),
        array('lhs' => 85, 'rhs' => 1),
        array('lhs' => 85, 'rhs' => 1),
        array('lhs' => 85, 'rhs' => 1),
        array('lhs' => 85, 'rhs' => 1),
        array('lhs' => 85, 'rhs' => 1),
        array('lhs' => 85, 'rhs' => 1),
        array('lhs' => 85, 'rhs' => 1),
        array('lhs' => 85, 'rhs' => 1),
        array('lhs' => 87, 'rhs' => 2),
        array('lhs' => 87, 'rhs' => 3),
        array('lhs' => 88, 'rhs' => 2),
        array('lhs' => 88, 'rhs' => 0),
        array('lhs' => 89, 'rhs' => 1),
        array('lhs' => 89, 'rhs' => 1),
        array('lhs' => 89, 'rhs' => 1),
        array('lhs' => 89, 'rhs' => 1),
        array('lhs' => 89, 'rhs' => 1),
        array('lhs' => 89, 'rhs' => 1),
        array('lhs' => 89, 'rhs' => 1),
        array('lhs' => 86, 'rhs' => 3),
        array('lhs' => 86, 'rhs' => 5),
        array('lhs' => 86, 'rhs' => 4),
        array('lhs' => 86, 'rhs' => 5),
        array('lhs' => 86, 'rhs' => 4),
        array('lhs' => 86, 'rhs' => 6),
        array('lhs' => 86, 'rhs' => 6),
        array('lhs' => 86, 'rhs' => 7),
        array('lhs' => 86, 'rhs' => 6),
        array('lhs' => 86, 'rhs' => 4),
        array('lhs' => 86, 'rhs' => 3),
        array('lhs' => 86, 'rhs' => 6),
        array('lhs' => 86, 'rhs' => 5),
        array('lhs' => 86, 'rhs' => 7),
        array('lhs' => 86, 'rhs' => 3),
        array('lhs' => 86, 'rhs' => 4),
        array('lhs' => 86, 'rhs' => 3),
        array('lhs' => 86, 'rhs' => 4),
        array('lhs' => 86, 'rhs' => 13),
        array('lhs' => 86, 'rhs' => 10),
        array('lhs' => 86, 'rhs' => 6),
        array('lhs' => 86, 'rhs' => 8),
        array('lhs' => 86, 'rhs' => 3),
        array('lhs' => 86, 'rhs' => 8),
        array('lhs' => 86, 'rhs' => 11),
        array('lhs' => 86, 'rhs' => 8),
        array('lhs' => 86, 'rhs' => 11),
        array('lhs' => 86, 'rhs' => 4),
        array('lhs' => 86, 'rhs' => 5),
        array('lhs' => 86, 'rhs' => 3),
        array('lhs' => 86, 'rhs' => 4),
        array('lhs' => 86, 'rhs' => 5),
        array('lhs' => 86, 'rhs' => 6),
        array('lhs' => 92, 'rhs' => 2),
        array('lhs' => 92, 'rhs' => 1),
        array('lhs' => 92, 'rhs' => 0),
        array('lhs' => 100, 'rhs' => 4),
        array('lhs' => 100, 'rhs' => 2),
        array('lhs' => 100, 'rhs' => 2),
        array('lhs' => 100, 'rhs' => 2),
        array('lhs' => 100, 'rhs' => 2),
        array('lhs' => 100, 'rhs' => 2),
        array('lhs' => 100, 'rhs' => 4),
        array('lhs' => 96, 'rhs' => 1),
        array('lhs' => 96, 'rhs' => 3),
        array('lhs' => 95, 'rhs' => 4),
        array('lhs' => 95, 'rhs' => 3),
        array('lhs' => 95, 'rhs' => 3),
        array('lhs' => 93, 'rhs' => 1),
        array('lhs' => 93, 'rhs' => 1),
        array('lhs' => 93, 'rhs' => 4),
        array('lhs' => 93, 'rhs' => 3),
        array('lhs' => 93, 'rhs' => 3),
        array('lhs' => 93, 'rhs' => 3),
        array('lhs' => 93, 'rhs' => 1),
        array('lhs' => 93, 'rhs' => 2),
        array('lhs' => 93, 'rhs' => 3),
        array('lhs' => 93, 'rhs' => 3),
        array('lhs' => 93, 'rhs' => 3),
        array('lhs' => 93, 'rhs' => 3),
        array('lhs' => 93, 'rhs' => 3),
        array('lhs' => 93, 'rhs' => 3),
        array('lhs' => 93, 'rhs' => 2),
        array('lhs' => 93, 'rhs' => 2),
        array('lhs' => 93, 'rhs' => 3),
        array('lhs' => 93, 'rhs' => 3),
        array('lhs' => 93, 'rhs' => 2),
        array('lhs' => 93, 'rhs' => 2),
        array('lhs' => 93, 'rhs' => 3),
        array('lhs' => 93, 'rhs' => 3),
        array('lhs' => 93, 'rhs' => 3),
        array('lhs' => 93, 'rhs' => 3),
        array('lhs' => 93, 'rhs' => 3),
        array('lhs' => 101, 'rhs' => 8),
        array('lhs' => 101, 'rhs' => 7),
        array('lhs' => 90, 'rhs' => 1),
        array('lhs' => 90, 'rhs' => 2),
        array('lhs' => 90, 'rhs' => 2),
        array('lhs' => 90, 'rhs' => 2),
        array('lhs' => 90, 'rhs' => 1),
        array('lhs' => 90, 'rhs' => 1),
        array('lhs' => 90, 'rhs' => 3),
        array('lhs' => 90, 'rhs' => 2),
        array('lhs' => 90, 'rhs' => 2),
        array('lhs' => 90, 'rhs' => 1),
        array('lhs' => 90, 'rhs' => 1),
        array('lhs' => 90, 'rhs' => 3),
        array('lhs' => 90, 'rhs' => 1),
        array('lhs' => 90, 'rhs' => 1),
        array('lhs' => 90, 'rhs' => 1),
        array('lhs' => 90, 'rhs' => 3),
        array('lhs' => 90, 'rhs' => 3),
        array('lhs' => 90, 'rhs' => 1),
        array('lhs' => 90, 'rhs' => 3),
        array('lhs' => 90, 'rhs' => 1),
        array('lhs' => 90, 'rhs' => 2),
        array('lhs' => 105, 'rhs' => 1),
        array('lhs' => 105, 'rhs' => 4),
        array('lhs' => 105, 'rhs' => 1),
        array('lhs' => 105, 'rhs' => 3),
        array('lhs' => 105, 'rhs' => 4),
        array('lhs' => 105, 'rhs' => 3),
        array('lhs' => 105, 'rhs' => 4),
        array('lhs' => 94, 'rhs' => 3),
        array('lhs' => 110, 'rhs' => 2),
        array('lhs' => 110, 'rhs' => 0),
        array('lhs' => 111, 'rhs' => 3),
        array('lhs' => 111, 'rhs' => 5),
        array('lhs' => 111, 'rhs' => 2),
        array('lhs' => 111, 'rhs' => 2),
        array('lhs' => 111, 'rhs' => 4),
        array('lhs' => 111, 'rhs' => 3),
        array('lhs' => 111, 'rhs' => 5),
        array('lhs' => 111, 'rhs' => 3),
        array('lhs' => 111, 'rhs' => 2),
        array('lhs' => 98, 'rhs' => 1),
        array('lhs' => 98, 'rhs' => 2),
        array('lhs' => 112, 'rhs' => 1),
        array('lhs' => 112, 'rhs' => 3),
        array('lhs' => 109, 'rhs' => 2),
        array('lhs' => 113, 'rhs' => 1),
        array('lhs' => 113, 'rhs' => 2),
        array('lhs' => 114, 'rhs' => 3),
        array('lhs' => 114, 'rhs' => 4),
        array('lhs' => 114, 'rhs' => 5),
        array('lhs' => 114, 'rhs' => 6),
        array('lhs' => 114, 'rhs' => 2),
        array('lhs' => 106, 'rhs' => 4),
        array('lhs' => 106, 'rhs' => 4),
        array('lhs' => 115, 'rhs' => 4),
        array('lhs' => 115, 'rhs' => 5),
        array('lhs' => 116, 'rhs' => 3),
        array('lhs' => 116, 'rhs' => 1),
        array('lhs' => 116, 'rhs' => 0),
        array('lhs' => 91, 'rhs' => 3),
        array('lhs' => 91, 'rhs' => 2),
        array('lhs' => 117, 'rhs' => 3),
        array('lhs' => 117, 'rhs' => 2),
        array('lhs' => 99, 'rhs' => 2),
        array('lhs' => 99, 'rhs' => 0),
        array('lhs' => 118, 'rhs' => 2),
        array('lhs' => 118, 'rhs' => 2),
        array('lhs' => 108, 'rhs' => 1),
        array('lhs' => 108, 'rhs' => 2),
        array('lhs' => 108, 'rhs' => 1),
        array('lhs' => 108, 'rhs' => 3),
        array('lhs' => 108, 'rhs' => 4),
        array('lhs' => 103, 'rhs' => 1),
        array('lhs' => 103, 'rhs' => 1),
        array('lhs' => 103, 'rhs' => 1),
        array('lhs' => 103, 'rhs' => 1),
        array('lhs' => 103, 'rhs' => 1),
        array('lhs' => 103, 'rhs' => 1),
        array('lhs' => 103, 'rhs' => 1),
        array('lhs' => 103, 'rhs' => 1),
        array('lhs' => 103, 'rhs' => 1),
        array('lhs' => 104, 'rhs' => 1),
        array('lhs' => 104, 'rhs' => 1),
        array('lhs' => 104, 'rhs' => 1),
        array('lhs' => 102, 'rhs' => 3),
        array('lhs' => 119, 'rhs' => 1),
        array('lhs' => 119, 'rhs' => 3),
        array('lhs' => 119, 'rhs' => 0),
        array('lhs' => 120, 'rhs' => 3),
        array('lhs' => 120, 'rhs' => 3),
        array('lhs' => 120, 'rhs' => 1),
        array('lhs' => 107, 'rhs' => 2),
        array('lhs' => 107, 'rhs' => 3),
        array('lhs' => 121, 'rhs' => 2),
        array('lhs' => 121, 'rhs' => 1),
        array('lhs' => 122, 'rhs' => 3),
        array('lhs' => 122, 'rhs' => 3),
        array('lhs' => 122, 'rhs' => 1),
        array('lhs' => 122, 'rhs' => 3),
        array('lhs' => 122, 'rhs' => 3),
        array('lhs' => 122, 'rhs' => 1),
        array('lhs' => 122, 'rhs' => 1),
        array('lhs' => 97, 'rhs' => 1),
        array('lhs' => 97, 'rhs' => 0),
    );

    static public $yyReduceMap = array(
        0 => 0,
        1 => 1,
        2 => 1,
        6 => 1,
        4 => 4,
        5 => 5,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        12 => 12,
        13 => 13,
        14 => 14,
        15 => 15,
        16 => 16,
        17 => 17,
        20 => 17,
        206 => 17,
        18 => 18,
        75 => 18,
        195 => 18,
        19 => 19,
        104 => 19,
        106 => 19,
        132 => 19,
        171 => 19,
        21 => 21,
        22 => 21,
        23 => 21,
        24 => 21,
        25 => 21,
        26 => 21,
        27 => 21,
        68 => 21,
        69 => 21,
        76 => 21,
        77 => 21,
        82 => 21,
        103 => 21,
        107 => 21,
        108 => 21,
        113 => 21,
        115 => 21,
        116 => 21,
        120 => 21,
        126 => 21,
        143 => 21,
        170 => 21,
        172 => 21,
        188 => 21,
        193 => 21,
        205 => 21,
        28 => 28,
        29 => 29,
        30 => 30,
        32 => 30,
        31 => 31,
        33 => 33,
        34 => 33,
        35 => 35,
        36 => 36,
        37 => 37,
        38 => 38,
        39 => 39,
        40 => 40,
        41 => 41,
        42 => 42,
        43 => 43,
        45 => 43,
        44 => 44,
        46 => 46,
        47 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        52 => 52,
        53 => 53,
        54 => 54,
        55 => 55,
        56 => 56,
        57 => 57,
        58 => 58,
        59 => 59,
        60 => 60,
        61 => 61,
        62 => 62,
        71 => 62,
        160 => 62,
        164 => 62,
        168 => 62,
        169 => 62,
        63 => 63,
        161 => 63,
        167 => 63,
        64 => 64,
        65 => 65,
        66 => 65,
        67 => 67,
        70 => 70,
        72 => 72,
        73 => 73,
        74 => 73,
        78 => 78,
        79 => 79,
        80 => 79,
        81 => 79,
        83 => 83,
        123 => 83,
        84 => 84,
        87 => 84,
        98 => 84,
        99 => 84,
        85 => 85,
        86 => 86,
        88 => 88,
        89 => 89,
        90 => 90,
        95 => 90,
        91 => 91,
        94 => 91,
        92 => 92,
        97 => 92,
        93 => 93,
        96 => 93,
        100 => 100,
        101 => 101,
        102 => 102,
        105 => 105,
        109 => 109,
        110 => 110,
        111 => 111,
        112 => 112,
        114 => 114,
        117 => 117,
        118 => 118,
        119 => 119,
        121 => 121,
        122 => 122,
        124 => 124,
        125 => 125,
        127 => 127,
        128 => 128,
        129 => 129,
        130 => 130,
        131 => 131,
        133 => 133,
        190 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        141 => 138,
        139 => 139,
        140 => 140,
        142 => 142,
        144 => 144,
        145 => 145,
        146 => 146,
        147 => 147,
        148 => 148,
        149 => 149,
        150 => 150,
        151 => 151,
        152 => 152,
        153 => 153,
        154 => 154,
        155 => 155,
        156 => 156,
        157 => 157,
        158 => 158,
        159 => 159,
        162 => 162,
        163 => 163,
        165 => 165,
        166 => 166,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        180 => 180,
        181 => 181,
        182 => 182,
        183 => 183,
        184 => 184,
        185 => 185,
        186 => 186,
        187 => 187,
        189 => 189,
        191 => 191,
        192 => 192,
        194 => 194,
        196 => 196,
        197 => 197,
        198 => 198,
        201 => 198,
        199 => 199,
        202 => 199,
        200 => 200,
        203 => 203,
        204 => 204,
    );

#line 110 "smarty_internal_template_parser.y"
    function yy_r0()
    {
        // execute end of template
        $this->compiler->template_code->newline()->php("array_shift(\$_smarty_tpl->trace_call_stack);\n");
        if ($this->compiler->caching) {
            $this->compiler->has_code = true;
            $this->compiler->nocache_nolog = true;
            $this->compiler->nocacheCode("array_shift(\$_smarty_tpl->trace_call_stack);", true);
        }
    }

#line 2246 "smarty_internal_template_parser.php"
#line 124 "smarty_internal_template_parser.y"
    function yy_r1()
    {
    }

#line 2250 "smarty_internal_template_parser.php"
#line 138 "smarty_internal_template_parser.y"
    function yy_r4()
    {
        if ($this->compiler->source->type == 'eval' || $this->compiler->source->type == 'string') {
            $resource = $this->compiler->source->type;
        } else {
            $resource = $this->compiler->source->filepath;
        }
        if (strpos($this->compiler->tpl_obj->template_resource, 'extends:') === false) {
            $code = "array_unshift(\$_smarty_tpl->trace_call_stack, array('{$resource}',{$this->lex->taglineno} , '{$this->compiler->source->type}'));";
            if ($this->compiler->caching) {
                $this->compiler->has_code = true;
                $this->compiler->nocache_nolog = true;
                $this->compiler->nocacheCode($code, true);
            }
            $this->compiler->template_code->php($code)->newline();
        }
    }

#line 2268 "smarty_internal_template_parser.php"
#line 157 "smarty_internal_template_parser.y"
    function yy_r5()
    {
        if ($this->compiler->has_code) {
            $line = 0;
            if ($this->compiler->tpl_obj->enable_traceback) {
                if ($this->compiler->caching && $this->last_taglineno_nocache != $this->lex->taglineno && ($this->compiler->nocache || $this->compiler->tag_nocache)) {
                    $line = $this->last_taglineno_nocache = $this->lex->taglineno;
                }
                if ($this->last_taglineno != $this->lex->taglineno && (!$this->compiler->caching || (!$this->compiler->nocache && !$this->compiler->tag_nocache))) {
                    $line = $this->last_taglineno = $this->lex->taglineno;
                }
            }
            $this->compiler->nocacheCode($this->yystack[$this->yyidx + 0]->minor, true, $line);
        } else {
            $this->compiler->template_code->raw($this->yystack[$this->yyidx + 0]->minor);
        }
        $this->block_nesting_level = count($this->compiler->_tag_stack);
    }

#line 2287 "smarty_internal_template_parser.php"
#line 180 "smarty_internal_template_parser.y"
    function yy_r7()
    {
        $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
    }

#line 2292 "smarty_internal_template_parser.php"
#line 185 "smarty_internal_template_parser.y"
    function yy_r8()
    {
        if ($this->php_handling == Smarty::PHP_PASSTHRU) {
            $this->compiler->template_code->php("echo '<?php';\n");
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->compiler->template_code->php("echo '&lt;?php';\n");
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            if (!($this->compiler->template instanceof SmartyBC)) {
                $this->compiler->trigger_template_error(self::Err3);
            }
            $this->text_is_php = true;
        }
    }

#line 2306 "smarty_internal_template_parser.php"
#line 199 "smarty_internal_template_parser.y"
    function yy_r9()
    {
        if ($this->is_xml) {
            $this->is_xml = false;
            $this->compiler->template_code->php("echo '?>';\n");
        } elseif ($this->php_handling == Smarty::PHP_PASSTHRU) {
            $this->compiler->template_code->php("echo '?>';\n");
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->compiler->template_code->php("echo '?&gt;';\n");
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            $this->text_is_php = false;
        }
    }

#line 2320 "smarty_internal_template_parser.php"
#line 213 "smarty_internal_template_parser.y"
    function yy_r10()
    {
        if ($this->php_handling == Smarty::PHP_PASSTHRU) {
            $this->compiler->template_code->php("echo '<%';\n");
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->compiler->template_code->php("echo '&lt;%';\n");
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            if ($this->asp_tags) {
                if (!($this->compiler->template instanceof SmartyBC)) {
                    $this->compiler->trigger_template_error(self::Err3);
                }
                $this->text_is_php = true;
            } else {
                $this->compiler->template_code->php("echo '<%';\n");
            }
        } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
            if (!$this->asp_tags) {
                $this->compiler->template_code->php("echo '<%';\n");
            }
        }
    }

#line 2342 "smarty_internal_template_parser.php"
#line 235 "smarty_internal_template_parser.y"
    function yy_r11()
    {
        if ($this->php_handling == Smarty::PHP_PASSTHRU) {
            $this->compiler->template_code->php("echo '%>';\n");
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->compiler->template_code->php("echo '%&gt;';\n");
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            if ($this->asp_tags) {
                $this->text_is_php = false;
            } else {
                $this->compiler->template_code->php("echo '%>';\n");
            }
        } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
            if (!$this->asp_tags) {
                $this->compiler->template_code->php("echo '%>';\n");
            }
        }
    }

#line 2361 "smarty_internal_template_parser.php"
#line 253 "smarty_internal_template_parser.y"
    function yy_r12()
    {
        if ($this->strip) {
            $this->compiler->template_code->php('echo ')->string(preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor))->raw(";\n");
        } else {
            $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
        }
    }

#line 2370 "smarty_internal_template_parser.php"
#line 262 "smarty_internal_template_parser.y"
    function yy_r13()
    {
        $this->is_xml = true;
        $this->compiler->template_code->php("echo '<?xml';\n");
    }

#line 2376 "smarty_internal_template_parser.php"
#line 268 "smarty_internal_template_parser.y"
    function yy_r14()
    {
        if ($this->text_is_php) {
            $line = 0;
            if ($this->compiler->tpl_obj->enable_traceback) {
                if ($this->compiler->caching && $this->last_taglineno_nocache != $this->lex->taglineno && ($this->compiler->nocache || $this->compiler->tag_nocache)) {
                    $line = $this->last_taglineno_nocache = $this->lex->taglineno;
                }
                if ($this->last_taglineno != $this->lex->taglineno && (!$this->compiler->caching || (!$this->compiler->nocache && !$this->compiler->tag_nocache))) {
                    $line = $this->last_taglineno = $this->lex->taglineno;
                }
            }
            $this->compiler->prefix_code[] = $this->yystack[$this->yyidx + 0]->minor;
            $this->compiler->nocacheCode('', true, $line);
        } else {
            // inheritance child templates shall not output text
            if (!$this->compiler->isInheritanceChild || $this->compiler->block_nesting_level > 0) {
                if ($this->strip) {
                    $this->compiler->template_code->php('echo ')->string(preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor))->raw(";\n");
                } else {
                    $this->compiler->template_code->php('echo ')->string($this->yystack[$this->yyidx + 0]->minor)->raw(";\n");
                }
            }
        }
    }

#line 2402 "smarty_internal_template_parser.php"
#line 294 "smarty_internal_template_parser.y"
    function yy_r15()
    {
        $this->strip = true;
    }

#line 2407 "smarty_internal_template_parser.php"
#line 298 "smarty_internal_template_parser.y"
    function yy_r16()
    {
        $this->strip = false;
    }

#line 2412 "smarty_internal_template_parser.php"
#line 303 "smarty_internal_template_parser.y"
    function yy_r17()
    {
        $this->_retvalue = '';
    }

#line 2417 "smarty_internal_template_parser.php"
#line 307 "smarty_internal_template_parser.y"
    function yy_r18()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }

#line 2422 "smarty_internal_template_parser.php"
#line 311 "smarty_internal_template_parser.y"
    function yy_r19()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2427 "smarty_internal_template_parser.php"
#line 319 "smarty_internal_template_parser.y"
    function yy_r21()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2432 "smarty_internal_template_parser.php"
#line 352 "smarty_internal_template_parser.y"
    function yy_r28()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression', array(), array('value' => $this->yystack[$this->yyidx + -1]->minor));
    }

#line 2437 "smarty_internal_template_parser.php"
#line 356 "smarty_internal_template_parser.y"
    function yy_r29()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression', $this->yystack[$this->yyidx + -1]->minor, array('value' => $this->yystack[$this->yyidx + -3]->minor, 'modifierlist' => $this->yystack[$this->yyidx + -2]->minor));
    }

#line 2442 "smarty_internal_template_parser.php"
#line 360 "smarty_internal_template_parser.y"
    function yy_r30()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression', $this->yystack[$this->yyidx + -1]->minor, array('value' => $this->yystack[$this->yyidx + -2]->minor));
    }

#line 2447 "smarty_internal_template_parser.php"
#line 364 "smarty_internal_template_parser.y"
    function yy_r31()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression', $this->yystack[$this->yyidx + -1]->minor, array('value' => $this->yystack[$this->yyidx + -3]->minor, 'modifierlist' => $this->yystack[$this->yyidx + -2]->minor));
    }

#line 2452 "smarty_internal_template_parser.php"
#line 377 "smarty_internal_template_parser.y"
    function yy_r33()
    {
        $this->_retvalue = $this->compiler->compileTag('assign', array(array('value' => $this->yystack[$this->yyidx + -1]->minor), array('var' => "'" . $this->yystack[$this->yyidx + -3]->minor . "'")));
    }

#line 2457 "smarty_internal_template_parser.php"
#line 385 "smarty_internal_template_parser.y"
    function yy_r35()
    {
        $this->_retvalue = $this->compiler->compileTag('assign', array_merge(array(array('value' => $this->yystack[$this->yyidx + -2]->minor), array('var' => "'" . $this->yystack[$this->yyidx + -4]->minor . "'")), $this->yystack[$this->yyidx + -1]->minor));
    }

#line 2462 "smarty_internal_template_parser.php"
#line 389 "smarty_internal_template_parser.y"
    function yy_r36()
    {
        $this->_retvalue = $this->compiler->compileTag('assign', array_merge(array(array('value' => $this->yystack[$this->yyidx + -2]->minor), array('var' => $this->yystack[$this->yyidx + -4]->minor['var'])), $this->yystack[$this->yyidx + -1]->minor), array('smarty_internal_index' => $this->yystack[$this->yyidx + -4]->minor['smarty_internal_index']));
    }

#line 2467 "smarty_internal_template_parser.php"
#line 394 "smarty_internal_template_parser.y"
    function yy_r37()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor, $this->yystack[$this->yyidx + -1]->minor);
    }

#line 2472 "smarty_internal_template_parser.php"
#line 398 "smarty_internal_template_parser.y"
    function yy_r38()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor, array());
    }

#line 2477 "smarty_internal_template_parser.php"
#line 403 "smarty_internal_template_parser.y"
    function yy_r39()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor, $this->yystack[$this->yyidx + -1]->minor, array('object_method' => $this->yystack[$this->yyidx + -2]->minor));
    }

#line 2482 "smarty_internal_template_parser.php"
#line 408 "smarty_internal_template_parser.y"
    function yy_r40()
    {
        $this->_retvalue = 'ob_start(); ' . $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor, $this->yystack[$this->yyidx + -1]->minor) . ' echo ';
        $this->_retvalue .= $this->compiler->compileTag('private_modifier', array(), array('modifierlist' => $this->yystack[$this->yyidx + -2]->minor, 'value' => 'ob_get_clean()')) . ';';
    }

#line 2488 "smarty_internal_template_parser.php"
#line 414 "smarty_internal_template_parser.y"
    function yy_r41()
    {
        $this->_retvalue = 'ob_start(); ' . $this->compiler->compileTag($this->yystack[$this->yyidx + -5]->minor, $this->yystack[$this->yyidx + -1]->minor, array('object_method' => $this->yystack[$this->yyidx + -3]->minor)) . ' echo ';
        $this->_retvalue .= $this->compiler->compileTag('private_modifier', array(), array('modifierlist' => $this->yystack[$this->yyidx + -2]->minor, 'value' => 'ob_get_clean()')) . ';';
    }

#line 2494 "smarty_internal_template_parser.php"
#line 420 "smarty_internal_template_parser.y"
    function yy_r42()
    {
        $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag, array(), array('if condition' => $this->yystack[$this->yyidx + -1]->minor));
    }

#line 2500 "smarty_internal_template_parser.php"
#line 425 "smarty_internal_template_parser.y"
    function yy_r43()
    {
        $tag = trim(substr($this->yystack[$this->yyidx + -3]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag, $this->yystack[$this->yyidx + -1]->minor, array('if condition' => $this->yystack[$this->yyidx + -2]->minor));
    }

#line 2506 "smarty_internal_template_parser.php"
#line 430 "smarty_internal_template_parser.y"
    function yy_r44()
    {
        $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag, array(), array('if condition' => $this->yystack[$this->yyidx + -1]->minor));
    }

#line 2512 "smarty_internal_template_parser.php"
#line 441 "smarty_internal_template_parser.y"
    function yy_r46()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[$this->yyidx + -1]->minor, array(array('start' => $this->yystack[$this->yyidx + -11]->minor), array('ifexp' => $this->yystack[$this->yyidx + -8]->minor), array('var' => $this->yystack[$this->yyidx + -4]->minor), array('step' => '=' . $this->yystack[$this->yyidx + -2]->minor))), 1);
    }

#line 2517 "smarty_internal_template_parser.php"
#line 444 "smarty_internal_template_parser.y"
    function yy_r47()
    {
        $len = strlen($this->yystack[$this->yyidx + -2]->minor);
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[$this->yyidx + -1]->minor, array(array('start' => $this->yystack[$this->yyidx + -8]->minor), array('ifexp' => $this->yystack[$this->yyidx + -5]->minor), array('var' => substr($this->yystack[$this->yyidx + -2]->minor, 1, $len - 3)), array('step' => substr($this->yystack[$this->yyidx + -2]->minor, $len - 2)))), 1);
    }

#line 2523 "smarty_internal_template_parser.php"
#line 449 "smarty_internal_template_parser.y"
    function yy_r48()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[$this->yyidx + -1]->minor, array(array('start' => $this->yystack[$this->yyidx + -4]->minor), array('to' => $this->yystack[$this->yyidx + -2]->minor))), 0);
    }

#line 2528 "smarty_internal_template_parser.php"
#line 453 "smarty_internal_template_parser.y"
    function yy_r49()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[$this->yyidx + -1]->minor, array(array('start' => $this->yystack[$this->yyidx + -6]->minor), array('to' => $this->yystack[$this->yyidx + -4]->minor), array('step' => $this->yystack[$this->yyidx + -2]->minor))), 0);
    }

#line 2533 "smarty_internal_template_parser.php"
#line 458 "smarty_internal_template_parser.y"
    function yy_r50()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', $this->yystack[$this->yyidx + -1]->minor);
    }

#line 2538 "smarty_internal_template_parser.php"
#line 463 "smarty_internal_template_parser.y"
    function yy_r51()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', array_merge($this->yystack[$this->yyidx + -1]->minor, array(array('from' => $this->yystack[$this->yyidx + -5]->minor), array('item' => $this->yystack[$this->yyidx + -2]->minor))));
    }

#line 2543 "smarty_internal_template_parser.php"
#line 467 "smarty_internal_template_parser.y"
    function yy_r52()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', array_merge($this->yystack[$this->yyidx + -1]->minor, array(array('from' => $this->yystack[$this->yyidx + -8]->minor), array('item' => $this->yystack[$this->yyidx + -2]->minor), array('key' => $this->yystack[$this->yyidx + -5]->minor))));
    }

#line 2548 "smarty_internal_template_parser.php"
#line 471 "smarty_internal_template_parser.y"
    function yy_r53()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', array_merge($this->yystack[$this->yyidx + -1]->minor, array(array('from' => $this->yystack[$this->yyidx + -5]->minor), array('item' => $this->yystack[$this->yyidx + -2]->minor))));
    }

#line 2553 "smarty_internal_template_parser.php"
#line 475 "smarty_internal_template_parser.y"
    function yy_r54()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', array_merge($this->yystack[$this->yyidx + -1]->minor, array(array('from' => $this->yystack[$this->yyidx + -8]->minor), array('item' => $this->yystack[$this->yyidx + -2]->minor), array('key' => $this->yystack[$this->yyidx + -5]->minor))));
    }

#line 2558 "smarty_internal_template_parser.php"
#line 480 "smarty_internal_template_parser.y"
    function yy_r55()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter', array(), array('modifier_list' => array(array_merge(array($this->yystack[$this->yyidx + -2]->minor), $this->yystack[$this->yyidx + -1]->minor))));
    }

#line 2563 "smarty_internal_template_parser.php"
#line 484 "smarty_internal_template_parser.y"
    function yy_r56()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter', array(), array('modifier_list' => array_merge(array(array_merge(array($this->yystack[$this->yyidx + -3]->minor), $this->yystack[$this->yyidx + -2]->minor)), $this->yystack[$this->yyidx + -1]->minor)));
    }

#line 2568 "smarty_internal_template_parser.php"
#line 491 "smarty_internal_template_parser.y"
    function yy_r57()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor . 'close', array());
    }

#line 2573 "smarty_internal_template_parser.php"
#line 495 "smarty_internal_template_parser.y"
    function yy_r58()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor . 'close', array(), array('modifier_list' => $this->yystack[$this->yyidx + -1]->minor));
    }

#line 2578 "smarty_internal_template_parser.php"
#line 500 "smarty_internal_template_parser.y"
    function yy_r59()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor . 'close', array(), array('object_method' => $this->yystack[$this->yyidx + -1]->minor));
    }

#line 2583 "smarty_internal_template_parser.php"
#line 504 "smarty_internal_template_parser.y"
    function yy_r60()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor . 'close', array(), array('object_method' => $this->yystack[$this->yyidx + -2]->minor, 'modifier_list' => $this->yystack[$this->yyidx + -1]->minor));
    }

#line 2588 "smarty_internal_template_parser.php"
#line 512 "smarty_internal_template_parser.y"
    function yy_r61()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
        $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2594 "smarty_internal_template_parser.php"
#line 518 "smarty_internal_template_parser.y"
    function yy_r62()
    {
        $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }

#line 2599 "smarty_internal_template_parser.php"
#line 523 "smarty_internal_template_parser.y"
    function yy_r63()
    {
        $this->_retvalue = array();
    }

#line 2604 "smarty_internal_template_parser.php"
#line 528 "smarty_internal_template_parser.y"
    function yy_r64()
    {
        if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor => 'true');
        } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor => 'false');
        } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor => 'null');
        } else {
            $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor => "'" . $this->yystack[$this->yyidx + 0]->minor . "'");
        }
    }

#line 2617 "smarty_internal_template_parser.php"
#line 540 "smarty_internal_template_parser.y"
    function yy_r65()
    {
        $this->_retvalue = array(trim($this->yystack[$this->yyidx + -1]->minor, " =\n\r\t") => $this->yystack[$this->yyidx + 0]->minor);
    }

#line 2622 "smarty_internal_template_parser.php"
#line 548 "smarty_internal_template_parser.y"
    function yy_r67()
    {
        $this->_retvalue = "'" . $this->yystack[$this->yyidx + 0]->minor . "'";
    }

#line 2627 "smarty_internal_template_parser.php"
#line 560 "smarty_internal_template_parser.y"
    function yy_r70()
    {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor => $this->yystack[$this->yyidx + 0]->minor);
    }

#line 2632 "smarty_internal_template_parser.php"
#line 573 "smarty_internal_template_parser.y"
    function yy_r72()
    {
        $this->yystack[$this->yyidx + -2]->minor[] = $this->yystack[$this->yyidx + 0]->minor;
        $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
    }

#line 2638 "smarty_internal_template_parser.php"
#line 578 "smarty_internal_template_parser.y"
    function yy_r73()
    {
        $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value' => $this->yystack[$this->yyidx + 0]->minor);
    }

#line 2643 "smarty_internal_template_parser.php"
#line 606 "smarty_internal_template_parser.y"
    function yy_r78()
    {
        $this->_retvalue = '$_smarty_tpl->getStreamVariable(\'' . $this->yystack[$this->yyidx + -2]->minor . '://' . $this->yystack[$this->yyidx + 0]->minor . '\')';
    }

#line 2648 "smarty_internal_template_parser.php"
#line 611 "smarty_internal_template_parser.y"
    function yy_r79()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2653 "smarty_internal_template_parser.php"
#line 630 "smarty_internal_template_parser.y"
    function yy_r83()
    {
        $this->_retvalue = $this->compiler->compileTag('private_modifier', array(), array('value' => $this->yystack[$this->yyidx + -1]->minor, 'modifierlist' => $this->yystack[$this->yyidx + 0]->minor));
    }

#line 2658 "smarty_internal_template_parser.php"
#line 636 "smarty_internal_template_parser.y"
    function yy_r84()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2663 "smarty_internal_template_parser.php"
#line 640 "smarty_internal_template_parser.y"
    function yy_r85()
    {
        $this->_retvalue = 'in_array(' . $this->yystack[$this->yyidx + -2]->minor . ',' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }

#line 2668 "smarty_internal_template_parser.php"
#line 644 "smarty_internal_template_parser.y"
    function yy_r86()
    {
        $this->_retvalue = 'in_array(' . $this->yystack[$this->yyidx + -2]->minor . ',(array)' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }

#line 2673 "smarty_internal_template_parser.php"
#line 652 "smarty_internal_template_parser.y"
    function yy_r88()
    {
        $this->_retvalue = '!(' . $this->yystack[$this->yyidx + -2]->minor . ' % ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }

#line 2678 "smarty_internal_template_parser.php"
#line 656 "smarty_internal_template_parser.y"
    function yy_r89()
    {
        $this->_retvalue = '(' . $this->yystack[$this->yyidx + -2]->minor . ' % ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }

#line 2683 "smarty_internal_template_parser.php"
#line 660 "smarty_internal_template_parser.y"
    function yy_r90()
    {
        $this->_retvalue = '!(1 & ' . $this->yystack[$this->yyidx + -1]->minor . ')';
    }

#line 2688 "smarty_internal_template_parser.php"
#line 664 "smarty_internal_template_parser.y"
    function yy_r91()
    {
        $this->_retvalue = '(1 & ' . $this->yystack[$this->yyidx + -1]->minor . ')';
    }

#line 2693 "smarty_internal_template_parser.php"
#line 668 "smarty_internal_template_parser.y"
    function yy_r92()
    {
        $this->_retvalue = '!(1 & ' . $this->yystack[$this->yyidx + -2]->minor . ' / ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }

#line 2698 "smarty_internal_template_parser.php"
#line 672 "smarty_internal_template_parser.y"
    function yy_r93()
    {
        $this->_retvalue = '(1 & ' . $this->yystack[$this->yyidx + -2]->minor . ' / ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }

#line 2703 "smarty_internal_template_parser.php"
#line 700 "smarty_internal_template_parser.y"
    function yy_r100()
    {
        $this->prefix_number++;
        $this->compiler->prefix_code[] = '$_tmp' . $this->prefix_number . '=' . $this->yystack[$this->yyidx + 0]->minor . ';';
        $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . $this->yystack[$this->yyidx + -1]->minor . '$_tmp' . $this->prefix_number;
    }

#line 2710 "smarty_internal_template_parser.php"
#line 709 "smarty_internal_template_parser.y"
    function yy_r101()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor . ' ? ' . $this->compileVariable("'" . $this->yystack[$this->yyidx + -2]->minor . "'") . ' : ' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2715 "smarty_internal_template_parser.php"
#line 713 "smarty_internal_template_parser.y"
    function yy_r102()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor . ' ? ' . $this->yystack[$this->yyidx + -2]->minor . ' : ' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2720 "smarty_internal_template_parser.php"
#line 729 "smarty_internal_template_parser.y"
    function yy_r105()
    {
        $this->_retvalue = '!' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2725 "smarty_internal_template_parser.php"
#line 746 "smarty_internal_template_parser.y"
    function yy_r109()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . '.' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2730 "smarty_internal_template_parser.php"
#line 750 "smarty_internal_template_parser.y"
    function yy_r110()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor . '.';
    }

#line 2735 "smarty_internal_template_parser.php"
#line 754 "smarty_internal_template_parser.y"
    function yy_r111()
    {
        $this->_retvalue = '.' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2740 "smarty_internal_template_parser.php"
#line 759 "smarty_internal_template_parser.y"
    function yy_r112()
    {
        if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = 'true';
        } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = 'false';
        } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = 'null';
        } else {
            $this->_retvalue = "'" . $this->yystack[$this->yyidx + 0]->minor . "'";
        }
    }

#line 2753 "smarty_internal_template_parser.php"
#line 777 "smarty_internal_template_parser.y"
    function yy_r114()
    {
        $this->_retvalue = "(" . $this->yystack[$this->yyidx + -1]->minor . ")";
    }

#line 2758 "smarty_internal_template_parser.php"
#line 791 "smarty_internal_template_parser.y"
    function yy_r117()
    {
        $len = strlen($this->yystack[$this->yyidx + 0]->minor);
        $this->_retvalue = '$_scope->' . substr($this->yystack[$this->yyidx + 0]->minor, 1, $len - 3) . '->value' . substr($this->yystack[$this->yyidx + 0]->minor, $len - 2);
    }

#line 2764 "smarty_internal_template_parser.php"
#line 797 "smarty_internal_template_parser.y"
    function yy_r118()
    {
        if (!$this->security || isset($this->compiler->tpl_obj->registered_classes[$this->yystack[$this->yyidx + -2]->minor]) || $this->compiler->tpl_obj->security_policy->isTrustedStaticClass($this->yystack[$this->yyidx + -2]->minor, $this->compiler)) {
            if (isset($this->compiler->tpl_obj->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) {
                $this->_retvalue = $this->compiler->tpl_obj->registered_classes[$this->yystack[$this->yyidx + -2]->minor] . '::' . $this->yystack[$this->yyidx + 0]->minor;
            } else {
                $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . '::' . $this->yystack[$this->yyidx + 0]->minor;
            }
        } else {
            $this->compiler->trigger_template_error("static class '" . $this->yystack[$this->yyidx + -2]->minor . "' is undefined or not allowed by security setting");
        }
    }

#line 2777 "smarty_internal_template_parser.php"
#line 810 "smarty_internal_template_parser.y"
    function yy_r119()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . '::' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2782 "smarty_internal_template_parser.php"
#line 819 "smarty_internal_template_parser.y"
    function yy_r121()
    {
        if ($this->yystack[$this->yyidx + -2]->minor['var'] == '\'smarty\'') {
            $this->_retvalue = $this->compiler->compileTag('private_special_variable', array(), $this->yystack[$this->yyidx + -2]->minor['smarty_internal_index']) . '::' . $this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -2]->minor['var']) . $this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'] . '::' . $this->yystack[$this->yyidx + 0]->minor;
        }
    }

#line 2791 "smarty_internal_template_parser.php"
#line 828 "smarty_internal_template_parser.y"
    function yy_r122()
    {
        $this->prefix_number++;
        $this->compiler->prefix_code[] = 'ob_start(); ' . $this->yystack[$this->yyidx + 0]->minor . ' $_tmp' . $this->prefix_number . '=ob_get_clean();';
        $this->_retvalue = '$_tmp' . $this->prefix_number;
    }

#line 2798 "smarty_internal_template_parser.php"
#line 843 "smarty_internal_template_parser.y"
    function yy_r124()
    {
        if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') {
            $smarty_var = $this->compiler->compileTag('private_special_variable', array(), $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
            $this->_retvalue = $smarty_var;
        } else {
            // used for array reset,next,prev,end,current 
            $this->last_variable = $this->yystack[$this->yyidx + 0]->minor['var'];
            $this->last_index = $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
            $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']) . $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
        }
    }

#line 2811 "smarty_internal_template_parser.php"
#line 856 "smarty_internal_template_parser.y"
    function yy_r125()
    {
        $this->_retvalue = '$_scope->' . trim($this->yystack[$this->yyidx + -2]->minor, "'") . '->' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2816 "smarty_internal_template_parser.php"
#line 866 "smarty_internal_template_parser.y"
    function yy_r127()
    {
        $var = trim($this->yystack[$this->yyidx + -1]->minor, '\'');
        $this->_retvalue = "\$_scope->___config_var_{$var}";
    }

#line 2822 "smarty_internal_template_parser.php"
#line 871 "smarty_internal_template_parser.y"
    function yy_r128()
    {
        $var = trim($this->yystack[$this->yyidx + -2]->minor, '\'');
        $this->_retvalue = "\$_scope->___config_var_{$var}" . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2828 "smarty_internal_template_parser.php"
#line 876 "smarty_internal_template_parser.y"
    function yy_r129()
    {
        $this->_retvalue = "\$_scope->___config_var_{{$this->yystack[$this->yyidx + -1]->minor}}";
    }

#line 2833 "smarty_internal_template_parser.php"
#line 880 "smarty_internal_template_parser.y"
    function yy_r130()
    {
        $this->_retvalue = "\$_scope->___config_var_{{$this->yystack[$this->yyidx + -2]->minor}}" . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2838 "smarty_internal_template_parser.php"
#line 884 "smarty_internal_template_parser.y"
    function yy_r131()
    {
        $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index' => $this->yystack[$this->yyidx + 0]->minor);
    }

#line 2843 "smarty_internal_template_parser.php"
#line 897 "smarty_internal_template_parser.y"
    function yy_r133()
    {
        return;
    }

#line 2848 "smarty_internal_template_parser.php"
#line 903 "smarty_internal_template_parser.y"
    function yy_r134()
    {
        $this->_retvalue = '[' . $this->compileVariable($this->yystack[$this->yyidx + 0]->minor) . ']';
    }

#line 2853 "smarty_internal_template_parser.php"
#line 907 "smarty_internal_template_parser.y"
    function yy_r135()
    {
        $this->_retvalue = '[' . $this->compileVariable($this->yystack[$this->yyidx + -2]->minor) . '->' . $this->yystack[$this->yyidx + 0]->minor . ']';
    }

#line 2858 "smarty_internal_template_parser.php"
#line 911 "smarty_internal_template_parser.y"
    function yy_r136()
    {
        $this->_retvalue = "['" . $this->yystack[$this->yyidx + 0]->minor . "']";
    }

#line 2863 "smarty_internal_template_parser.php"
#line 915 "smarty_internal_template_parser.y"
    function yy_r137()
    {
        $this->_retvalue = "[" . $this->yystack[$this->yyidx + 0]->minor . "]";
    }

#line 2868 "smarty_internal_template_parser.php"
#line 919 "smarty_internal_template_parser.y"
    function yy_r138()
    {
        $this->_retvalue = "[" . $this->yystack[$this->yyidx + -1]->minor . "]";
    }

#line 2873 "smarty_internal_template_parser.php"
#line 924 "smarty_internal_template_parser.y"
    function yy_r139()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable', array(), '[\'section\'][\'' . $this->yystack[$this->yyidx + -1]->minor . '\'][\'index\']') . ']';
    }

#line 2878 "smarty_internal_template_parser.php"
#line 928 "smarty_internal_template_parser.y"
    function yy_r140()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable', array(), '[\'section\'][\'' . $this->yystack[$this->yyidx + -3]->minor . '\'][\'' . $this->yystack[$this->yyidx + -1]->minor . '\']') . ']';
    }

#line 2883 "smarty_internal_template_parser.php"
#line 938 "smarty_internal_template_parser.y"
    function yy_r142()
    {
        $this->_retvalue = '[]';
    }

#line 2888 "smarty_internal_template_parser.php"
#line 951 "smarty_internal_template_parser.y"
    function yy_r144()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor . '.' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2893 "smarty_internal_template_parser.php"
#line 956 "smarty_internal_template_parser.y"
    function yy_r145()
    {
        $this->_retvalue = '\'' . $this->yystack[$this->yyidx + 0]->minor . '\'';
    }

#line 2898 "smarty_internal_template_parser.php"
#line 961 "smarty_internal_template_parser.y"
    function yy_r146()
    {
        $this->_retvalue = '(' . $this->yystack[$this->yyidx + -1]->minor . ')';
    }

#line 2903 "smarty_internal_template_parser.php"
#line 968 "smarty_internal_template_parser.y"
    function yy_r147()
    {
        if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') {
            $this->_retvalue = $this->compiler->compileTag('private_special_variable', array(), $this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']) . $this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']) . $this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'] . $this->yystack[$this->yyidx + 0]->minor;
        }
    }

#line 2912 "smarty_internal_template_parser.php"
#line 977 "smarty_internal_template_parser.y"
    function yy_r148()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2917 "smarty_internal_template_parser.php"
#line 982 "smarty_internal_template_parser.y"
    function yy_r149()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2922 "smarty_internal_template_parser.php"
#line 987 "smarty_internal_template_parser.y"
    function yy_r150()
    {
        if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor, 0, 1) == '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue = '->' . $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2930 "smarty_internal_template_parser.php"
#line 994 "smarty_internal_template_parser.y"
    function yy_r151()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{' . $this->compileVariable($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor . '}';
    }

#line 2938 "smarty_internal_template_parser.php"
#line 1001 "smarty_internal_template_parser.y"
    function yy_r152()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{' . $this->yystack[$this->yyidx + -2]->minor . $this->yystack[$this->yyidx + 0]->minor . '}';
    }

#line 2946 "smarty_internal_template_parser.php"
#line 1008 "smarty_internal_template_parser.y"
    function yy_r153()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{\'' . $this->yystack[$this->yyidx + -4]->minor . '\'.' . $this->yystack[$this->yyidx + -2]->minor . $this->yystack[$this->yyidx + 0]->minor . '}';
    }

#line 2954 "smarty_internal_template_parser.php"
#line 1016 "smarty_internal_template_parser.y"
    function yy_r154()
    {
        $this->_retvalue = '->' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 2959 "smarty_internal_template_parser.php"
#line 1024 "smarty_internal_template_parser.y"
    function yy_r155()
    {
        if (!$this->security || $this->compiler->tpl_obj->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
            if (strcasecmp($this->yystack[$this->yyidx + -3]->minor, 'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor, 'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor, 'array') === 0 || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
                $func_name = strtolower($this->yystack[$this->yyidx + -3]->minor);
                if ($func_name == 'isset') {
                    if (count($this->yystack[$this->yyidx + -1]->minor) == 0) {
                        $this->compiler->trigger_template_error('Illegal number of paramer in "isset()"');
                    }
                    $par = implode(',', $this->yystack[$this->yyidx + -1]->minor);
                    preg_match('/\$_scope->([0-9]*[a-zA-Z_]\w*)(.*)/', $par, $match);
                    if (isset($match[1])) {
                        $search = array('/\$_scope->([0-9]*[a-zA-Z_]\w*)/', '/->value.*/');
                        $replace = array('$_smarty_tpl->getVariable(\'\1\', null, true, false)', '');
                        $this->prefix_number++;
                        $this->compiler->prefix_code[] = '$_tmp' . $this->prefix_number . '=' . preg_replace($search, $replace, $par) . ';';
                        $isset_par = '$_tmp' . $this->prefix_number . $match[2];
                    } else {
                        $this->prefix_number++;
                        $this->compiler->prefix_code[] = '$_tmp' . $this->prefix_number . '=' . $par . ';';
                        $isset_par = '$_tmp' . $this->prefix_number;
                    }
                    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(" . $isset_par . ")";
                } elseif (in_array($func_name, array('empty', 'reset', 'current', 'end', 'prev', 'next'))) {
                    if (count($this->yystack[$this->yyidx + -1]->minor) != 1) {
                        $this->compiler->trigger_template_error("Illegal number of paramer in \"{$func_name}\"");
                    }
                    $this->_retvalue = $func_name . '(' . $this->yystack[$this->yyidx + -1]->minor[0] . ')';
                } else {
                    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(" . implode(',', $this->yystack[$this->yyidx + -1]->minor) . ")";
                }
            } else {
                $this->compiler->trigger_template_error("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
            }
        }
    }

#line 2996 "smarty_internal_template_parser.php"
#line 1063 "smarty_internal_template_parser.y"
    function yy_r156()
    {
        if (!$this->security || $this->compiler->tpl_obj->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
            if (is_callable($this->yystack[$this->yyidx + -3]->minor)) {
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(" . implode(',', $this->yystack[$this->yyidx + -1]->minor) . ")";
            } else {
                $this->compiler->trigger_template_error("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
            }
        }
    }

#line 3007 "smarty_internal_template_parser.php"
#line 1076 "smarty_internal_template_parser.y"
    function yy_r157()
    {
        if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor, 0, 1) == '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(" . implode(',', $this->yystack[$this->yyidx + -1]->minor) . ")";
    }

#line 3015 "smarty_internal_template_parser.php"
#line 1083 "smarty_internal_template_parser.y"
    function yy_r158()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->prefix_number++;
        $this->compiler->prefix_code[] = '$_tmp' . $this->prefix_number . '=' . $this->compileVariable("'" . $this->yystack[$this->yyidx + -3]->minor . "'") . ';';
        $this->_retvalue = '$_tmp' . $this->prefix_number . '(' . implode(',', $this->yystack[$this->yyidx + -1]->minor) . ')';
    }

#line 3025 "smarty_internal_template_parser.php"
#line 1094 "smarty_internal_template_parser.y"
    function yy_r159()
    {
        $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor, array($this->yystack[$this->yyidx + 0]->minor));
    }

#line 3030 "smarty_internal_template_parser.php"
#line 1111 "smarty_internal_template_parser.y"
    function yy_r162()
    {
        $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor, array(array_merge($this->yystack[$this->yyidx + -1]->minor, $this->yystack[$this->yyidx + 0]->minor)));
    }

#line 3035 "smarty_internal_template_parser.php"
#line 1115 "smarty_internal_template_parser.y"
    function yy_r163()
    {
        $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor, $this->yystack[$this->yyidx + 0]->minor));
    }

#line 3040 "smarty_internal_template_parser.php"
#line 1123 "smarty_internal_template_parser.y"
    function yy_r165()
    {
        $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }

#line 3045 "smarty_internal_template_parser.php"
#line 1131 "smarty_internal_template_parser.y"
    function yy_r166()
    {
        $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor, $this->yystack[$this->yyidx + 0]->minor);
    }

#line 3050 "smarty_internal_template_parser.php"
#line 1165 "smarty_internal_template_parser.y"
    function yy_r173()
    {
        $this->_retvalue = '$' . $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 3055 "smarty_internal_template_parser.php"
#line 1170 "smarty_internal_template_parser.y"
    function yy_r174()
    {
        $this->_retvalue = '$' . $this->yystack[$this->yyidx + -2]->minor . $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 3060 "smarty_internal_template_parser.php"
#line 1176 "smarty_internal_template_parser.y"
    function yy_r175()
    {
        $this->_retvalue = '==';
    }

#line 3065 "smarty_internal_template_parser.php"
#line 1180 "smarty_internal_template_parser.y"
    function yy_r176()
    {
        $this->_retvalue = '!=';
    }

#line 3070 "smarty_internal_template_parser.php"
#line 1184 "smarty_internal_template_parser.y"
    function yy_r177()
    {
        $this->_retvalue = '>';
    }

#line 3075 "smarty_internal_template_parser.php"
#line 1188 "smarty_internal_template_parser.y"
    function yy_r178()
    {
        $this->_retvalue = '<';
    }

#line 3080 "smarty_internal_template_parser.php"
#line 1192 "smarty_internal_template_parser.y"
    function yy_r179()
    {
        $this->_retvalue = '>=';
    }

#line 3085 "smarty_internal_template_parser.php"
#line 1196 "smarty_internal_template_parser.y"
    function yy_r180()
    {
        $this->_retvalue = '<=';
    }

#line 3090 "smarty_internal_template_parser.php"
#line 1200 "smarty_internal_template_parser.y"
    function yy_r181()
    {
        $this->_retvalue = '===';
    }

#line 3095 "smarty_internal_template_parser.php"
#line 1204 "smarty_internal_template_parser.y"
    function yy_r182()
    {
        $this->_retvalue = '!==';
    }

#line 3100 "smarty_internal_template_parser.php"
#line 1208 "smarty_internal_template_parser.y"
    function yy_r183()
    {
        $this->_retvalue = '%';
    }

#line 3105 "smarty_internal_template_parser.php"
#line 1212 "smarty_internal_template_parser.y"
    function yy_r184()
    {
        $this->_retvalue = '&&';
    }

#line 3110 "smarty_internal_template_parser.php"
#line 1216 "smarty_internal_template_parser.y"
    function yy_r185()
    {
        $this->_retvalue = '||';
    }

#line 3115 "smarty_internal_template_parser.php"
#line 1220 "smarty_internal_template_parser.y"
    function yy_r186()
    {
        $this->_retvalue = ' XOR ';
    }

#line 3120 "smarty_internal_template_parser.php"
#line 1227 "smarty_internal_template_parser.y"
    function yy_r187()
    {
        $this->_retvalue = 'array(' . $this->yystack[$this->yyidx + -1]->minor . ')';
    }

#line 3125 "smarty_internal_template_parser.php"
#line 1235 "smarty_internal_template_parser.y"
    function yy_r189()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . ',' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 3130 "smarty_internal_template_parser.php"
#line 1243 "smarty_internal_template_parser.y"
    function yy_r191()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . '=>' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 3135 "smarty_internal_template_parser.php"
#line 1247 "smarty_internal_template_parser.y"
    function yy_r192()
    {
        $this->_retvalue = '\'' . $this->yystack[$this->yyidx + -2]->minor . '\'=>' . $this->yystack[$this->yyidx + 0]->minor;
    }

#line 3140 "smarty_internal_template_parser.php"
#line 1259 "smarty_internal_template_parser.y"
    function yy_r194()
    {
        $this->_retvalue = "''";
    }

#line 3145 "smarty_internal_template_parser.php"
#line 1268 "smarty_internal_template_parser.y"
    function yy_r196()
    {
        if ($this->yystack[$this->yyidx + 0]->minor === false) {
            $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
        } else {
            $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor . '.' . $this->yystack[$this->yyidx + 0]->minor;
        }
    }

#line 3154 "smarty_internal_template_parser.php"
#line 1276 "smarty_internal_template_parser.y"
    function yy_r197()
    {
        if ($this->yystack[$this->yyidx + 0]->minor === false) {
            $this->_retvalue = "''";
        } else {
            $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
        }
    }

#line 3163 "smarty_internal_template_parser.php"
#line 1284 "smarty_internal_template_parser.y"
    function yy_r198()
    {
        if (empty($this->db_quote_code_buffer)) {
            $this->_retvalue = '(string)' . $this->yystack[$this->yyidx + -1]->minor;
        } else {
            $this->db_quote_code_buffer .= 'echo (string)' . $this->yystack[$this->yyidx + -1]->minor . ';';
            $this->_retvalue = false;
        }
    }

#line 3173 "smarty_internal_template_parser.php"
#line 1293 "smarty_internal_template_parser.y"
    function yy_r199()
    {
        if (empty($this->db_quote_code_buffer)) {
            $this->_retvalue = '(string)(' . $this->yystack[$this->yyidx + -1]->minor . ')';
        } else {
            $this->db_quote_code_buffer .= 'echo (string)(' . $this->yystack[$this->yyidx + -1]->minor . ');';
            $this->_retvalue = false;
        }
    }

#line 3183 "smarty_internal_template_parser.php"
#line 1302 "smarty_internal_template_parser.y"
    function yy_r200()
    {
        if (empty($this->db_quote_code_buffer)) {
            $this->_retvalue = '(string)$_scope->' . substr($this->yystack[$this->yyidx + 0]->minor, 1) . '->value';
        } else {
            $this->db_quote_code_buffer .= 'echo (string)$_scope->' . substr($this->yystack[$this->yyidx + 0]->minor, 1) . '->value;';
            $this->_retvalue = false;
        }
    }

#line 3193 "smarty_internal_template_parser.php"
#line 1329 "smarty_internal_template_parser.y"
    function yy_r203()
    {
        if (empty($this->db_quote_code_buffer)) {
            $this->db_quote_code_buffer = 'ob_start();';
        }
        $this->db_quote_code_buffer .= $this->yystack[$this->yyidx + 0]->minor;
        if ($this->block_nesting_level == count($this->compiler->_tag_stack)) {
            $this->prefix_number++;
            $this->compiler->prefix_code[] = $this->db_quote_code_buffer . ' $_tmp' . $this->prefix_number . '=ob_get_clean();';
            $this->db_quote_code_buffer = '';
            $this->_retvalue = '$_tmp' . $this->prefix_number;
        } else {
            $this->_retvalue = false;
        }

    }

#line 3210 "smarty_internal_template_parser.php"
#line 1345 "smarty_internal_template_parser.y"
    function yy_r204()
    {
        if (empty($this->db_quote_code_buffer)) {
            $this->_retvalue = '"' . $this->yystack[$this->yyidx + 0]->minor . '"';
        } else {
            $this->db_quote_code_buffer .= 'echo ' . sprintf('"%s"', addcslashes($this->yystack[$this->yyidx + 0]->minor, "\0\t\n\r\"\$\\")) . ';';
            $this->_retvalue = false;
        }
    }

#line 3220 "smarty_internal_template_parser.php"

    private $_retvalue;

    function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0
            && $yyruleno < count(self::$yyRuleName)
        ) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 92 "smarty_internal_template_parser.y"

        $this->internalError = true;
        $this->yymajor = $yymajor;
        $this->compiler->trigger_template_error();
#line 3283 "smarty_internal_template_parser.php"
    }

    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 84 "smarty_internal_template_parser.y"

        $this->successful = !$this->internalError;
        $this->internalError = false;
        $this->retvalue = $this->_retvalue;
        //echo $this->retvalue."\n\n";
#line 3301 "smarty_internal_template_parser.php"
    }

    function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0; /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor == 0);

        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                !$this->yy_is_expected_token($yymajor)
            ) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit) {
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                            $yymx != self::YYERRORSYMBOL &&
                            ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                        ) {
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor == 0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
